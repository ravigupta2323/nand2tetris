/**
 * Copyright 2017 Ignacio del Valle Alles idelvall@brutusin.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Double-linked list node implementation.
 */
class ListNode {
  
    field int _value;
    field ListNode _previous;
    field ListNode _next;
    
    constructor ListNode new(int value){
        let _value = value;
        let _next = null;
        let _previous = null;
        return this;
    }
    
    method void setValue(int value){
        let _value = value;
        return;
    }
    
    method void setNext(ListNode next){
        let _next = next;
        return;
    }
    
    method void setPrevious(ListNode previous){
        let _previous = previous;
        return;
    }
    
    method ListNode getPrevious(){
        return _previous;
    }
    
    method int getValue(){
        return _value;
    }
    
    method ListNode getNext(){
        return _next;
    }
    
    method void dispose () {
        do Memory.deAlloc(this);
        return;
    }
}