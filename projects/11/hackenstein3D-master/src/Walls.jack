// Hackenstein-3D: Escape from Castle Hackenstein part 2
// by James Leibert February 2017

// Walls Class. Manages the layout of the maze and performs the ray casting
// to identify what the player can see.

class Walls {

    // Definition of the Maze
    static Array xWalls, yWalls, allowedPaths;
    static int exit;

    // Definition of the wall textures
    static Array patterns;
    
    // Information about target sighting
    // When a target wall is visible in the sights, we will automatically
    // notice and store the relevant information
    static boolean targetVisible;
    static int targetWallDirection, targetWallNum;

    // Trigonometry Tables
    static Array tanTable, atanTable, maxDelta;

    /** Set up the Maze and the wall patterns*/
    function void init() {

	// Maze Information
	let exit = 2;

	// Target Variable initialisation
	let targetVisible = false;

	do Walls.setupTrigTables();

	// Define the locations and textures of walls in the EW direction
	// 0 is no Wall, 3 is the target wall, n-1 is pattern index, -n means facing in the opposite direction
	let xWalls = Array.new(72);
	let xWalls[0] = 1; let xWalls[1] = 1; let xWalls[2] = 5; let xWalls[3] = 1; let xWalls[4] = 1; let xWalls[5] = 1; let xWalls[6] = 1; let xWalls[7] = 1; 
	let xWalls[8] = 0; let xWalls[9] = 3; let xWalls[10] = 2; let xWalls[11] = 0; let xWalls[12] = 2; let xWalls[13] = 0; let xWalls[14] = 0; let xWalls[15] = 0; 
	let xWalls[16] = 0; let xWalls[17] = 0; let xWalls[18] = 0; let xWalls[19] = 0; let xWalls[20] = 0; let xWalls[21] = 0; let xWalls[22] = 2; let xWalls[23] = 0; 
	let xWalls[24] = 0; let xWalls[25] = 0; let xWalls[26] = 2; let xWalls[27] = 0; let xWalls[28] = 0; let xWalls[29] = 3; let xWalls[30] = 0; let xWalls[31] = 2; 
	let xWalls[32] = 0; let xWalls[33] = 2; let xWalls[34] = 0; let xWalls[35] = 0; let xWalls[36] = 0; let xWalls[37] = 0; let xWalls[38] = 0; let xWalls[39] = 3; 
	let xWalls[40] = 0; let xWalls[41] = 0; let xWalls[42] = 0; let xWalls[43] = 0; let xWalls[44] = 2; let xWalls[45] = 2; let xWalls[46] = 0; let xWalls[47] = 0; 
	let xWalls[48] = 2; let xWalls[49] = 0; let xWalls[50] = 0; let xWalls[51] = 0; let xWalls[52] = 2; let xWalls[53] = 2; let xWalls[54] = 2; let xWalls[55] = 2; 
	let xWalls[56] = 0; let xWalls[57] = 2; let xWalls[58] = 0; let xWalls[59] = 0; let xWalls[60] = 2; let xWalls[61] = 2; let xWalls[62] = 2; let xWalls[63] = 0; 
	let xWalls[64] = 1; let xWalls[65] = 1; let xWalls[66] = 1; let xWalls[67] = -4; let xWalls[68] = 1; let xWalls[69] = 1; let xWalls[70] = 1; let xWalls[71] = 1; 

	// Define the locations and textures of walls in the NS direction
	// 0 is no Wall, 3 is the target wall, n-1 is pattern index, -n means facing in the opposite direction
	let yWalls = Array.new(72);
	let yWalls[0] = 1; let yWalls[1] = 1; let yWalls[2] = 1; let yWalls[3] = 1; let yWalls[4] = 1; let yWalls[5] = 1; let yWalls[6] = 1; let yWalls[7] = -4; 
	let yWalls[8] = 0; let yWalls[9] = 2; let yWalls[10] = 2; let yWalls[11] = 2; let yWalls[12] = 0; let yWalls[13] = 2; let yWalls[14] = 0; let yWalls[15] = 0; 
	let yWalls[16] = 0; let yWalls[17] = 2; let yWalls[18] = 2; let yWalls[19] = 0; let yWalls[20] = 2; let yWalls[21] = 2; let yWalls[22] = 2; let yWalls[23] = 0; 
	let yWalls[24] = 2; let yWalls[25] = 0; let yWalls[26] = 0; let yWalls[27] = 2; let yWalls[28] = 2; let yWalls[29] = 2; let yWalls[30] = 2; let yWalls[31] = 0; 
	let yWalls[32] = 2; let yWalls[33] = 0; let yWalls[34] = 0; let yWalls[35] = 0; let yWalls[36] = 0; let yWalls[37] = 0; let yWalls[38] = 2; let yWalls[39] = 0; 
	let yWalls[40] = 0; let yWalls[41] = 2; let yWalls[42] = 2; let yWalls[43] = 0; let yWalls[44] = 0; let yWalls[45] = 0; let yWalls[46] = 0; let yWalls[47] = 0; 
	let yWalls[48] = 0; let yWalls[49] = 0; let yWalls[50] = 0; let yWalls[51] = 2; let yWalls[52] = 2; let yWalls[53] = 0; let yWalls[54] = 0; let yWalls[55] = 0; 
	let yWalls[56] = 0; let yWalls[57] = 0; let yWalls[58] = 2; let yWalls[59] = 0; let yWalls[60] = 2; let yWalls[61] = 0; let yWalls[62] = 0; let yWalls[63] = 0; 
	let yWalls[64] = 1; let yWalls[65] = 1; let yWalls[66] = 1; let yWalls[67] = 1; let yWalls[68] = 1; let yWalls[69] = -4; let yWalls[70] = 1; let yWalls[71] = 1; 

	// 64 Rooms (xRoom + yRoom8) with 4 directions from each 0,1,2,3=NSWE
	// true means you can pass in this direction, false means there is a wall in the way
	let allowedPaths = Array.new(256);
	let allowedPaths[0] = true; let allowedPaths[1] = false; let allowedPaths[2] = false; let allowedPaths[3] = true; 
	let allowedPaths[4] = false; let allowedPaths[5] = false; let allowedPaths[6] = true; let allowedPaths[7] = true; 
	let allowedPaths[8] = false; let allowedPaths[9] = false; let allowedPaths[10] = true; let allowedPaths[11] = false; 
	let allowedPaths[12] = true; let allowedPaths[13] = false; let allowedPaths[14] = false; let allowedPaths[15] = false; 
	let allowedPaths[16] = false; let allowedPaths[17] = false; let allowedPaths[18] = false; let allowedPaths[19] = true; 
	let allowedPaths[20] = true; let allowedPaths[21] = false; let allowedPaths[22] = true; let allowedPaths[23] = true; 
	let allowedPaths[24] = true; let allowedPaths[25] = false; let allowedPaths[26] = true; let allowedPaths[27] = true; 
	let allowedPaths[28] = true; let allowedPaths[29] = false; let allowedPaths[30] = true; let allowedPaths[31] = false; 
	let allowedPaths[32] = true; let allowedPaths[33] = true; let allowedPaths[34] = false; let allowedPaths[35] = false; 
	let allowedPaths[36] = true; let allowedPaths[37] = false; let allowedPaths[38] = false; let allowedPaths[39] = false; 
	let allowedPaths[40] = true; let allowedPaths[41] = false; let allowedPaths[42] = false; let allowedPaths[43] = true; 
	let allowedPaths[44] = true; let allowedPaths[45] = true; let allowedPaths[46] = true; let allowedPaths[47] = true; 
	let allowedPaths[48] = true; let allowedPaths[49] = false; let allowedPaths[50] = true; let allowedPaths[51] = false; 
	let allowedPaths[52] = true; let allowedPaths[53] = true; let allowedPaths[54] = false; let allowedPaths[55] = true; 
	let allowedPaths[56] = false; let allowedPaths[57] = true; let allowedPaths[58] = true; let allowedPaths[59] = true; 
	let allowedPaths[60] = true; let allowedPaths[61] = true; let allowedPaths[62] = true; let allowedPaths[63] = false; 
	let allowedPaths[64] = true; let allowedPaths[65] = true; let allowedPaths[66] = false; let allowedPaths[67] = false; 
	let allowedPaths[68] = true; let allowedPaths[69] = true; let allowedPaths[70] = false; let allowedPaths[71] = false; 
	let allowedPaths[72] = false; let allowedPaths[73] = true; let allowedPaths[74] = false; let allowedPaths[75] = true; 
	let allowedPaths[76] = true; let allowedPaths[77] = true; let allowedPaths[78] = true; let allowedPaths[79] = true; 
	let allowedPaths[80] = true; let allowedPaths[81] = true; let allowedPaths[82] = true; let allowedPaths[83] = false; 
	let allowedPaths[84] = false; let allowedPaths[85] = true; let allowedPaths[86] = false; let allowedPaths[87] = true; 
	let allowedPaths[88] = true; let allowedPaths[89] = false; let allowedPaths[90] = true; let allowedPaths[91] = false; 
	let allowedPaths[92] = false; let allowedPaths[93] = true; let allowedPaths[94] = false; let allowedPaths[95] = false; 
	let allowedPaths[96] = true; let allowedPaths[97] = true; let allowedPaths[98] = false; let allowedPaths[99] = false; 
	let allowedPaths[100] = false; let allowedPaths[101] = true; let allowedPaths[102] = false; let allowedPaths[103] = true; 
	let allowedPaths[104] = true; let allowedPaths[105] = false; let allowedPaths[106] = true; let allowedPaths[107] = false; 
	let allowedPaths[108] = true; let allowedPaths[109] = true; let allowedPaths[110] = false; let allowedPaths[111] = true; 
	let allowedPaths[112] = true; let allowedPaths[113] = true; let allowedPaths[114] = true; let allowedPaths[115] = true; 
	let allowedPaths[116] = true; let allowedPaths[117] = false; let allowedPaths[118] = true; let allowedPaths[119] = false; 
	let allowedPaths[120] = true; let allowedPaths[121] = true; let allowedPaths[122] = false; let allowedPaths[123] = true; 
	let allowedPaths[124] = false; let allowedPaths[125] = false; let allowedPaths[126] = true; let allowedPaths[127] = false; 
	let allowedPaths[128] = true; let allowedPaths[129] = true; let allowedPaths[130] = false; let allowedPaths[131] = true; 
	let allowedPaths[132] = true; let allowedPaths[133] = false; let allowedPaths[134] = true; let allowedPaths[135] = false; 
	let allowedPaths[136] = true; let allowedPaths[137] = true; let allowedPaths[138] = false; let allowedPaths[139] = false; 
	let allowedPaths[140] = true; let allowedPaths[141] = true; let allowedPaths[142] = false; let allowedPaths[143] = true; 
	let allowedPaths[144] = false; let allowedPaths[145] = true; let allowedPaths[146] = true; let allowedPaths[147] = true; 
	let allowedPaths[148] = false; let allowedPaths[149] = true; let allowedPaths[150] = true; let allowedPaths[151] = false; 
	let allowedPaths[152] = true; let allowedPaths[153] = true; let allowedPaths[154] = false; let allowedPaths[155] = false; 
	let allowedPaths[156] = true; let allowedPaths[157] = false; let allowedPaths[158] = false; let allowedPaths[159] = false; 
	let allowedPaths[160] = false; let allowedPaths[161] = true; let allowedPaths[162] = false; let allowedPaths[163] = false; 
	let allowedPaths[164] = true; let allowedPaths[165] = true; let allowedPaths[166] = false; let allowedPaths[167] = false; 
	let allowedPaths[168] = true; let allowedPaths[169] = true; let allowedPaths[170] = false; let allowedPaths[171] = false; 
	let allowedPaths[172] = true; let allowedPaths[173] = true; let allowedPaths[174] = false; let allowedPaths[175] = true; 
	let allowedPaths[176] = false; let allowedPaths[177] = false; let allowedPaths[178] = true; let allowedPaths[179] = true; 
	let allowedPaths[180] = false; let allowedPaths[181] = false; let allowedPaths[182] = true; let allowedPaths[183] = true; 
	let allowedPaths[184] = false; let allowedPaths[185] = true; let allowedPaths[186] = true; let allowedPaths[187] = true; 
	let allowedPaths[188] = false; let allowedPaths[189] = true; let allowedPaths[190] = true; let allowedPaths[191] = false; 
	let allowedPaths[192] = true; let allowedPaths[193] = false; let allowedPaths[194] = false; let allowedPaths[195] = true; 
	let allowedPaths[196] = false; let allowedPaths[197] = true; let allowedPaths[198] = true; let allowedPaths[199] = false; 
	let allowedPaths[200] = true; let allowedPaths[201] = true; let allowedPaths[202] = false; let allowedPaths[203] = false; 
	let allowedPaths[204] = true; let allowedPaths[205] = true; let allowedPaths[206] = false; let allowedPaths[207] = false; 
	let allowedPaths[208] = false; let allowedPaths[209] = false; let allowedPaths[210] = false; let allowedPaths[211] = true; 
	let allowedPaths[212] = false; let allowedPaths[213] = false; let allowedPaths[214] = true; let allowedPaths[215] = true; 
	let allowedPaths[216] = false; let allowedPaths[217] = false; let allowedPaths[218] = true; let allowedPaths[219] = true; 
	let allowedPaths[220] = true; let allowedPaths[221] = false; let allowedPaths[222] = true; let allowedPaths[223] = false; 
	let allowedPaths[224] = false; let allowedPaths[225] = true; let allowedPaths[226] = false; let allowedPaths[227] = true; 
	let allowedPaths[228] = false; let allowedPaths[229] = false; let allowedPaths[230] = true; let allowedPaths[231] = true; 
	let allowedPaths[232] = false; let allowedPaths[233] = true; let allowedPaths[234] = true; let allowedPaths[235] = true; 
	let allowedPaths[236] = false; let allowedPaths[237] = true; let allowedPaths[238] = true; let allowedPaths[239] = true; 
	let allowedPaths[240] = false; let allowedPaths[241] = false; let allowedPaths[242] = true; let allowedPaths[243] = true; 
	let allowedPaths[244] = false; let allowedPaths[245] = false; let allowedPaths[246] = true; let allowedPaths[247] = true; 
	let allowedPaths[248] = false; let allowedPaths[249] = false; let allowedPaths[250] = true; let allowedPaths[251] = true; 
	let allowedPaths[252] = false; let allowedPaths[253] = true; let allowedPaths[254] = true; let allowedPaths[255] = false;

	// Wall texture patterns
	// 5 patterns starting at offsets 0, 16, 32, 48 and 64
	// Each pattern consists of 16 vertical strips
	// Each vertical stripe is binary coded pattern of 16 bits
	let patterns = Array.new(80);
	let patterns[0] = -1; let patterns[1] = -32767; let patterns[2] = -32743; let patterns[3] = -26567;
	let patterns[4] = -26599; let patterns[5] = -32743; let patterns[6] = -31975; let patterns[7] = -30947;
	let patterns[8] = -31975; let patterns[9] = -29951; let patterns[10] = -31999; let patterns[11] = -31871;
	let patterns[12] = -31999; let patterns[13] = -32743; let patterns[14] = -32743; let patterns[15] = -24575; 
	let patterns[16] = -1; let patterns[17] = -8191; let patterns[18] = -8167; let patterns[19] = -31975;
	let patterns[20] = -31999; let patterns[21] = -32767; let patterns[22] = -32671; let patterns[23] = -32671;
	let patterns[24] = -26623; let patterns[25] = -26623; let patterns[26] = -32755; let patterns[27] = -32755;
	let patterns[28] = -32383; let patterns[29] = -32383; let patterns[30] = -32767; let patterns[31] = -32767; 
	let patterns[32] = -1; let patterns[33] = -32767; let patterns[34] = -32767; let patterns[35] = -32767;
	let patterns[36] = -32767; let patterns[37] = -32319; let patterns[38] = -31775; let patterns[39] = -30863;
	let patterns[40] = -31183; let patterns[41] = -30863; let patterns[42] = -31775; let patterns[43] = -32319;
	let patterns[44] = -32767; let patterns[45] = -32767; let patterns[46] = -32767; let patterns[47] = -32767; 
	let patterns[48] = 1; let patterns[49] = 16257; let patterns[50] = 6385; let patterns[51] = 8161;
	let patterns[52] = 3169; let patterns[53] = 20417; let patterns[54] = 26609; let patterns[55] = 32761;
	let patterns[56] = 32765; let patterns[57] = 26589; let patterns[58] = 20429; let patterns[59] = 3177;
	let patterns[60] = 8161; let patterns[61] = 6385; let patterns[62] = 16257; let patterns[63] = 1; 
	let patterns[64] = -1; let patterns[65] = -32767; let patterns[66] = -32767; let patterns[67] = -32767;
	let patterns[68] = -32767; let patterns[69] = -31; let patterns[70] = -1055; let patterns[71] = -31;
	let patterns[72] = -31; let patterns[73] = -31; let patterns[74] = -31; let patterns[75] = -31;
	let patterns[76] = -32767; let patterns[77] = -32767; let patterns[78] = -32767; let patterns[79] = -32767; 

	return;
    }

    /** generating the visible wall buffers using a geometrical ray-casting algorithm */
    function void generate(int playerLocation,
			   int wallDistances, int wallPatterns) {

	// A large number of integer variables are required
	// Location of the player: room, 64ths within the room, 64ths from the origin
	var int xRoom, xPos, xPlayer, yRoom, yPos, yPlayer;
	
	// Angles: theta is orientation, mu is the ray direction
	// muQ1 and muSgn are used to compute the correct value from the table
	// trigonometric functions are computed from the tables
	var int theta, mu, muQ1, muSgn;
	var int sinTh64, cosTh64, tanMu64, tanMu64D, cotMu64, cotMu64D;

	// Integer overflow protection
	var int maxDeltaX, maxDeltaY;

	// Which pixel is being rendered
	var int pixel;

	// Location of the ray intercepts with the grid lines
	var int direction, direction8, deltaX, deltaY, lineX, lineY, lineX8, lineY8;

	// Data on the closest intercept with each set of gridlines
	// v is NS direction, h is EW direction
	var boolean found;
	var int vtex, vwall, vwallLookup, vd, vseg;
	var int htex, hwall, hwallLookup, hd, hseg;

	// Unpack the player location and orientation data
	let xRoom = playerLocation[0];
	let xPos = playerLocation[1];
	let yRoom = playerLocation[2];
	let yPos = playerLocation[3];
	let theta = playerLocation[4] * 64;
	let cosTh64 = playerLocation[5];
	let sinTh64 = playerLocation[6];
	let xPlayer = xRoom * 64 + xPos;
	let yPlayer = yRoom * 64 + yPos;

	// Loop through each direction visible on the screen from
	// notional pixel -128 (45 degrees left) to 128 (45 degrees right)
	let pixel = 0;
	while (pixel < 256) {

	    // Get the trigonometric values for the ray passing through
	    // the current screen pixel
	    let mu = theta + atanTable[pixel];
	    if (mu > 4095) { let mu = mu - 4096; }
	    if (mu < 0) { let mu = mu + 4096; }

	    if (mu < 1025) {
		let muQ1 = mu; let muSgn = 1;
	    } else {
		if (mu < 2048) {
		    let muQ1 = 2048 - mu; let muSgn = -1;
		} else {
		    if (mu < 3073) {
			let muQ1 = mu - 2048; let muSgn = 1;
		    } else {
			let muQ1 = 4096 - mu; let muSgn = -1;
		    }
		}
	    }

	    // Lookup the angles to get the wall intercept multipliers
	    if (muSgn = -1) {
		let tanMu64 = -tanTable[muQ1];
		let cotMu64 = -tanTable[1024-muQ1];
	    } else {
		let tanMu64 = tanTable[muQ1];
		let cotMu64 = tanTable[1024-muQ1];
	    }

	    // Identify overflow limits (these can never produce a valid
	    // intercept point)
	    if (muQ1 > 942) {
		let maxDeltaY = maxDelta[1024-muQ1];
	    } else {
		let maxDeltaY = 32767;
	    }
	    if (muQ1 < 81) {
		let maxDeltaX = maxDelta[muQ1];
	    } else {
		let maxDeltaX = 32767;
	    }

	    // Calculate intercepts with the vertical grid lines until you hit a wall

	    // Locate the first grid line intercept
	    if (mu < 2048) {
		let direction = 64;
		let direction8 = 8;
		let cotMu64D = cotMu64;
		let lineX8 = (xRoom + 1) * 8;
	    } else {
		let direction = - 64;
		let direction8 = - 8;
		let cotMu64D = - cotMu64;
		let lineX8 = xRoom * 8;
	    }
	    let lineX = lineX8 * 8;	    
	    let deltaX = lineX - xPlayer;
	    if (((-maxDeltaX) < deltaX) & (deltaX < maxDeltaX)) {

		let deltaY = (cotMu64 * deltaX) / 64; /* Location of first intercept. SLOW */
		let lineY = yPlayer + deltaY;

		// Is it a wall?
		if ((lineY > -1) & (lineY < 513)) {
		    let vwall = lineY / 64;           /* SLOW */
		    let vwallLookup = lineX8 + vwall;
		    let vtex = yWalls[vwallLookup];
		} else {
		    // No intercept possible
		    let vtex = 0;
		    let lineX = 16384;
		    let lineY = 16384;
		}
		
		// Look for other intercepts
		while ((vtex = 0) & (lineX < 513) & (lineX > -1)) {

		    // Other intercepts are at integer multiples of 64*cot(mu)
		    // after the initial grid intercept
		    let deltaX = deltaX + direction;
		    let lineX = lineX + direction;
		    let lineX8 = lineX8 + direction8;
		    let deltaY = deltaY + cotMu64D;
		    let lineY = lineY + cotMu64D;
		    
		    // Is it a wall?
		    if ((lineY > -1) & (lineY < 513)) {
			let vwall = lineY / 64;           /* SLOW */
			let vwallLookup = lineX8 + vwall;
			let vtex = yWalls[vwallLookup];
		    } else {
			// No intercept possible
			let vtex = 0;
			let lineX = 16384;
			let lineY = 16384;
		    }
		    
		}
		
	    } else {
		// No intercept possible
		let vtex = 0;
		let lineX = 16384;
		let lineY = 16384;
	    }

	    // Calculate correct distance and segment if a hit was made
	    if ((lineY < 513) & (lineY > -1)) {
		
		// The wall distance is measured parallel to the player's orientation
		// and therefore requires a matrix rotation to calculate
		let vd = ((sinTh64 * deltaX) + (cosTh64 * deltaY)) / 32; /* SLOW */
		if (vd < 0) {
		    let vd = 32767;
		}
		let vseg = (lineY & 63) / 4;

	    } else {
		let vd = 32767;
		let vseg = 0;
	    }

	    // Calculate intercepts with the horizontal grid lines until you hit a wall

	    // Locate the first grid line intercept
	    if ((mu < 1024) | (mu > 3071)) {
		let direction = 64;
		let direction8 = 8;
		let tanMu64D = tanMu64;
		let lineY8 = (yRoom + 1) * 8;
	    } else {
		let direction = - 64;
		let direction8 = - 8;
		let tanMu64D = - tanMu64;
		let lineY8 = yRoom * 8;
	    }
	    let lineY = lineY8 * 8;	    
	    let deltaY = lineY - yPlayer;
	    if (((-maxDeltaY) < deltaY) & (deltaY < maxDeltaY)) {

		let deltaX = (tanMu64 * deltaY) / 64; /* Location of first intercept. SLOW */
		let lineX = xPlayer + deltaX;

		// Is it a wall?
		if ((lineX > -1) & (lineX < 513)) {
		    let hwall = lineX / 64;           /* SLOW */
		    let hwallLookup = lineY8 + hwall;
		    let htex = xWalls[hwallLookup];
		} else {
		    // No intercept possible
		    let htex = 0;
		    let lineX = 16384;
		    let lineY = 16384;
		}
		
		// Look for other intercepts
		while ((htex = 0) & (lineY < 513) & (lineY > -1)) {

		    // Other intercepts are at integer multiples of 64*cot(mu)
		    // after the initial grid intercept
		    let deltaY = deltaY + direction;
		    let lineY = lineY + direction;
		    let lineY8 = lineY8 + direction8;
		    let deltaX = deltaX + tanMu64D;
		    let lineX = lineX + tanMu64D;
		    
		    // Is it a wall?
		    if ((lineX > -1) & (lineX < 513)) {
			let hwall = lineX / 64;           /* SLOW */
			let hwallLookup = lineY8 + hwall;
			let htex = xWalls[hwallLookup];
		    } else {
			// No intercept possible
			let htex = 0;
			let lineX = 16384;
			let lineY = 16384;
		    }
		    
		}
		
	    } else {
		// No intercept possible
		let htex = 0;
		let lineX = 16384;
		let lineY = 16384;
	    }

	    // Calculate correct distance and segment if a hit was made
	    if ((lineX < 513) & (lineX > -1)) {
		
		// The wall distance is measured parallel to the player's orientation
		// and therefore requires a matrix rotation to calculate
		let hd = ((sinTh64 * deltaX) + (cosTh64 * deltaY)) / 32; /* SLOW */
		if (hd < 0) {
		    let hd = 32767;
		}
		let hseg = (lineX & 63) / 4;

	    } else {
		let hd = 32767;
		let hseg = 0;
	    }


	    // Which is closer, the vertical wall or horizontal wall?
	    if (vd < hd) {

		// Vertical wall is closer, pack the v-values into the buffer
		let wallDistances[pixel] = vd;
		if (vtex < 0) {
		    let wallPatterns[pixel] = patterns[((-vtex) * 16) - (vseg + 1)];
		} else {
		    let wallPatterns[pixel] = patterns[(vtex * 16) + (vseg - 16)];
		}
		
		// Is the target in sight?
		if (pixel = 128) {
		    let targetWallDirection = 0;
		    let targetWallNum = vwallLookup;
		    if ((vtex = 3) | (vtex = -3)) {
			let targetVisible = true;
		    } else {
			let targetVisible = false;
		    }
		}
		
	    } else {
		
		// Horizontal wall is closer, pack the h-values into the buffer
		let wallDistances[pixel] = hd;
		if (htex < 0) {
		    let wallPatterns[pixel] = patterns[((-htex) * 16) - (hseg + 1)];
		} else {
		    let wallPatterns[pixel] = patterns[(htex * 16) + (hseg - 16)];
		}

		// Is the target in sight?
		if (pixel = 128) {
		    let targetWallDirection = 0;
		    let targetWallNum = hwallLookup;
		    if ((htex = 3) | (htex = -3)) {
			let targetVisible = true;
		    } else {
			let targetVisible = false;
		    }
		}
	    }

	    // Move on to the next pixel
	    let pixel = pixel + 1;

	} // While pixel 
	
	return;

    }

    /** Change the texture of a target wall that has been hit */
    function void untarget() {
	if (targetVisible) {
	    if (targetWallDirection = 0) {
		let xWalls[targetWallNum] = 2;
	    } else {
		let yWalls[targetWallNum] = 2;
	    }
	    let targetVisible = false;
	}
	return;
    }

    /** Get the allowed paths*/
    function int paths() {
	return allowedPaths;
    }

    /** Is the target visible? */
    function boolean targetInSight() {
	return targetVisible;
    }

    /** Is the player in the exit room? */
    function boolean atExit(int playerRoom) {
	if (playerRoom = exit) {
	    return true;
	} else {
	    return false;
	}
    }
    
    /** Unallocate the maze arrays and lookup tables*/
    function void cleanup() {
	do xWalls.dispose();
	do yWalls.dispose();
	do allowedPaths.dispose();
	do patterns.dispose();
	do tanTable.dispose();
	do atanTable.dispose();
	do maxDelta.dispose();
	return;
    }

    function void setupTrigTables() {
	
	// Setup the trigonometry tables
	// The lookup angle is in 4096th of a circle, even at this level of detail, some
	// visible glitches occur (eg. corners not joining)
	// tan for other angles and cot can both be derived from values in this table
	// This table is code generated by a Python script
	let tanTable = Array.new(1025);
	let tanTable[0] = 0; let tanTable[1] = 0; let tanTable[2] = 0; let tanTable[3] = 0; 
	let tanTable[4] = 0; let tanTable[5] = 0; let tanTable[6] = 1; let tanTable[7] = 1; 
	let tanTable[8] = 1; let tanTable[9] = 1; let tanTable[10] = 1; let tanTable[11] = 1; 
	let tanTable[12] = 1; let tanTable[13] = 1; let tanTable[14] = 1; let tanTable[15] = 1; 
	let tanTable[16] = 2; let tanTable[17] = 2; let tanTable[18] = 2; let tanTable[19] = 2; 
	let tanTable[20] = 2; let tanTable[21] = 2; let tanTable[22] = 2; let tanTable[23] = 2; 
	let tanTable[24] = 2; let tanTable[25] = 2; let tanTable[26] = 3; let tanTable[27] = 3; 
	let tanTable[28] = 3; let tanTable[29] = 3; let tanTable[30] = 3; let tanTable[31] = 3; 
	let tanTable[32] = 3; let tanTable[33] = 3; let tanTable[34] = 3; let tanTable[35] = 3; 
	let tanTable[36] = 4; let tanTable[37] = 4; let tanTable[38] = 4; let tanTable[39] = 4; 
	let tanTable[40] = 4; let tanTable[41] = 4; let tanTable[42] = 4; let tanTable[43] = 4; 
	let tanTable[44] = 4; let tanTable[45] = 4; let tanTable[46] = 5; let tanTable[47] = 5; 
	let tanTable[48] = 5; let tanTable[49] = 5; let tanTable[50] = 5; let tanTable[51] = 5; 
	let tanTable[52] = 5; let tanTable[53] = 5; let tanTable[54] = 5; let tanTable[55] = 5; 
	let tanTable[56] = 6; let tanTable[57] = 6; let tanTable[58] = 6; let tanTable[59] = 6; 
	let tanTable[60] = 6; let tanTable[61] = 6; let tanTable[62] = 6; let tanTable[63] = 6; 
	let tanTable[64] = 6; let tanTable[65] = 6; let tanTable[66] = 7; let tanTable[67] = 7; 
	let tanTable[68] = 7; let tanTable[69] = 7; let tanTable[70] = 7; let tanTable[71] = 7; 
	let tanTable[72] = 7; let tanTable[73] = 7; let tanTable[74] = 7; let tanTable[75] = 7; 
	let tanTable[76] = 7; let tanTable[77] = 8; let tanTable[78] = 8; let tanTable[79] = 8; 
	let tanTable[80] = 8; let tanTable[81] = 8; let tanTable[82] = 8; let tanTable[83] = 8; 
	let tanTable[84] = 8; let tanTable[85] = 8; let tanTable[86] = 8; let tanTable[87] = 9; 
	let tanTable[88] = 9; let tanTable[89] = 9; let tanTable[90] = 9; let tanTable[91] = 9; 
	let tanTable[92] = 9; let tanTable[93] = 9; let tanTable[94] = 9; let tanTable[95] = 9; 
	let tanTable[96] = 9; let tanTable[97] = 10; let tanTable[98] = 10; let tanTable[99] = 10; 
	let tanTable[100] = 10; let tanTable[101] = 10; let tanTable[102] = 10; let tanTable[103] = 10; 
	let tanTable[104] = 10; let tanTable[105] = 10; let tanTable[106] = 10; let tanTable[107] = 11; 
	let tanTable[108] = 11; let tanTable[109] = 11; let tanTable[110] = 11; let tanTable[111] = 11; 
	let tanTable[112] = 11; let tanTable[113] = 11; let tanTable[114] = 11; let tanTable[115] = 11; 
	let tanTable[116] = 12; let tanTable[117] = 12; let tanTable[118] = 12; let tanTable[119] = 12; 
	let tanTable[120] = 12; let tanTable[121] = 12; let tanTable[122] = 12; let tanTable[123] = 12; 
	let tanTable[124] = 12; let tanTable[125] = 12; let tanTable[126] = 13; let tanTable[127] = 13; 
	let tanTable[128] = 13; let tanTable[129] = 13; let tanTable[130] = 13; let tanTable[131] = 13; 
	let tanTable[132] = 13; let tanTable[133] = 13; let tanTable[134] = 13; let tanTable[135] = 13; 
	let tanTable[136] = 14; let tanTable[137] = 14; let tanTable[138] = 14; let tanTable[139] = 14; 
	let tanTable[140] = 14; let tanTable[141] = 14; let tanTable[142] = 14; let tanTable[143] = 14; 
	let tanTable[144] = 14; let tanTable[145] = 14; let tanTable[146] = 15; let tanTable[147] = 15; 
	let tanTable[148] = 15; let tanTable[149] = 15; let tanTable[150] = 15; let tanTable[151] = 15; 
	let tanTable[152] = 15; let tanTable[153] = 15; let tanTable[154] = 15; let tanTable[155] = 16; 
	let tanTable[156] = 16; let tanTable[157] = 16; let tanTable[158] = 16; let tanTable[159] = 16; 
	let tanTable[160] = 16; let tanTable[161] = 16; let tanTable[162] = 16; let tanTable[163] = 16; 
	let tanTable[164] = 16; let tanTable[165] = 17; let tanTable[166] = 17; let tanTable[167] = 17; 
	let tanTable[168] = 17; let tanTable[169] = 17; let tanTable[170] = 17; let tanTable[171] = 17; 
	let tanTable[172] = 17; let tanTable[173] = 17; let tanTable[174] = 17; let tanTable[175] = 18; 
	let tanTable[176] = 18; let tanTable[177] = 18; let tanTable[178] = 18; let tanTable[179] = 18; 
	let tanTable[180] = 18; let tanTable[181] = 18; let tanTable[182] = 18; let tanTable[183] = 18; 
	let tanTable[184] = 19; let tanTable[185] = 19; let tanTable[186] = 19; let tanTable[187] = 19; 
	let tanTable[188] = 19; let tanTable[189] = 19; let tanTable[190] = 19; let tanTable[191] = 19; 
	let tanTable[192] = 19; let tanTable[193] = 20; let tanTable[194] = 20; let tanTable[195] = 20; 
	let tanTable[196] = 20; let tanTable[197] = 20; let tanTable[198] = 20; let tanTable[199] = 20; 
	let tanTable[200] = 20; let tanTable[201] = 20; let tanTable[202] = 20; let tanTable[203] = 21; 
	let tanTable[204] = 21; let tanTable[205] = 21; let tanTable[206] = 21; let tanTable[207] = 21; 
	let tanTable[208] = 21; let tanTable[209] = 21; let tanTable[210] = 21; let tanTable[211] = 21; 
	let tanTable[212] = 22; let tanTable[213] = 22; let tanTable[214] = 22; let tanTable[215] = 22; 
	let tanTable[216] = 22; let tanTable[217] = 22; let tanTable[218] = 22; let tanTable[219] = 22; 
	let tanTable[220] = 22; let tanTable[221] = 23; let tanTable[222] = 23; let tanTable[223] = 23; 
	let tanTable[224] = 23; let tanTable[225] = 23; let tanTable[226] = 23; let tanTable[227] = 23; 
	let tanTable[228] = 23; let tanTable[229] = 23; let tanTable[230] = 24; let tanTable[231] = 24; 
	let tanTable[232] = 24; let tanTable[233] = 24; let tanTable[234] = 24; let tanTable[235] = 24; 
	let tanTable[236] = 24; let tanTable[237] = 24; let tanTable[238] = 24; let tanTable[239] = 25; 
	let tanTable[240] = 25; let tanTable[241] = 25; let tanTable[242] = 25; let tanTable[243] = 25; 
	let tanTable[244] = 25; let tanTable[245] = 25; let tanTable[246] = 25; let tanTable[247] = 25; 
	let tanTable[248] = 26; let tanTable[249] = 26; let tanTable[250] = 26; let tanTable[251] = 26; 
	let tanTable[252] = 26; let tanTable[253] = 26; let tanTable[254] = 26; let tanTable[255] = 26; 
	let tanTable[256] = 27; let tanTable[257] = 27; let tanTable[258] = 27; let tanTable[259] = 27; 
	let tanTable[260] = 27; let tanTable[261] = 27; let tanTable[262] = 27; let tanTable[263] = 27; 
	let tanTable[264] = 27; let tanTable[265] = 28; let tanTable[266] = 28; let tanTable[267] = 28; 
	let tanTable[268] = 28; let tanTable[269] = 28; let tanTable[270] = 28; let tanTable[271] = 28; 
	let tanTable[272] = 28; let tanTable[273] = 28; let tanTable[274] = 29; let tanTable[275] = 29; 
	let tanTable[276] = 29; let tanTable[277] = 29; let tanTable[278] = 29; let tanTable[279] = 29; 
	let tanTable[280] = 29; let tanTable[281] = 29; let tanTable[282] = 30; let tanTable[283] = 30; 
	let tanTable[284] = 30; let tanTable[285] = 30; let tanTable[286] = 30; let tanTable[287] = 30; 
	let tanTable[288] = 30; let tanTable[289] = 30; let tanTable[290] = 31; let tanTable[291] = 31; 
	let tanTable[292] = 31; let tanTable[293] = 31; let tanTable[294] = 31; let tanTable[295] = 31; 
	let tanTable[296] = 31; let tanTable[297] = 31; let tanTable[298] = 31; let tanTable[299] = 32; 
	let tanTable[300] = 32; let tanTable[301] = 32; let tanTable[302] = 32; let tanTable[303] = 32; 
	let tanTable[304] = 32; let tanTable[305] = 32; let tanTable[306] = 32; let tanTable[307] = 33; 
	let tanTable[308] = 33; let tanTable[309] = 33; let tanTable[310] = 33; let tanTable[311] = 33; 
	let tanTable[312] = 33; let tanTable[313] = 33; let tanTable[314] = 33; let tanTable[315] = 34; 
	let tanTable[316] = 34; let tanTable[317] = 34; let tanTable[318] = 34; let tanTable[319] = 34; 
	let tanTable[320] = 34; let tanTable[321] = 34; let tanTable[322] = 34; let tanTable[323] = 35; 
	let tanTable[324] = 35; let tanTable[325] = 35; let tanTable[326] = 35; let tanTable[327] = 35; 
	let tanTable[328] = 35; let tanTable[329] = 35; let tanTable[330] = 35; let tanTable[331] = 36; 
	let tanTable[332] = 36; let tanTable[333] = 36; let tanTable[334] = 36; let tanTable[335] = 36; 
	let tanTable[336] = 36; let tanTable[337] = 36; let tanTable[338] = 37; let tanTable[339] = 37; 
	let tanTable[340] = 37; let tanTable[341] = 37; let tanTable[342] = 37; let tanTable[343] = 37; 
	let tanTable[344] = 37; let tanTable[345] = 37; let tanTable[346] = 38; let tanTable[347] = 38; 
	let tanTable[348] = 38; let tanTable[349] = 38; let tanTable[350] = 38; let tanTable[351] = 38; 
	let tanTable[352] = 38; let tanTable[353] = 38; let tanTable[354] = 39; let tanTable[355] = 39; 
	let tanTable[356] = 39; let tanTable[357] = 39; let tanTable[358] = 39; let tanTable[359] = 39; 
	let tanTable[360] = 39; let tanTable[361] = 40; let tanTable[362] = 40; let tanTable[363] = 40; 
	let tanTable[364] = 40; let tanTable[365] = 40; let tanTable[366] = 40; let tanTable[367] = 40; 
	let tanTable[368] = 41; let tanTable[369] = 41; let tanTable[370] = 41; let tanTable[371] = 41; 
	let tanTable[372] = 41; let tanTable[373] = 41; let tanTable[374] = 41; let tanTable[375] = 41; 
	let tanTable[376] = 42; let tanTable[377] = 42; let tanTable[378] = 42; let tanTable[379] = 42; 
	let tanTable[380] = 42; let tanTable[381] = 42; let tanTable[382] = 42; let tanTable[383] = 43; 
	let tanTable[384] = 43; let tanTable[385] = 43; let tanTable[386] = 43; let tanTable[387] = 43; 
	let tanTable[388] = 43; let tanTable[389] = 43; let tanTable[390] = 44; let tanTable[391] = 44; 
	let tanTable[392] = 44; let tanTable[393] = 44; let tanTable[394] = 44; let tanTable[395] = 44; 
	let tanTable[396] = 44; let tanTable[397] = 45; let tanTable[398] = 45; let tanTable[399] = 45; 
	let tanTable[400] = 45; let tanTable[401] = 45; let tanTable[402] = 45; let tanTable[403] = 46; 
	let tanTable[404] = 46; let tanTable[405] = 46; let tanTable[406] = 46; let tanTable[407] = 46; 
	let tanTable[408] = 46; let tanTable[409] = 46; let tanTable[410] = 47; let tanTable[411] = 47; 
	let tanTable[412] = 47; let tanTable[413] = 47; let tanTable[414] = 47; let tanTable[415] = 47; 
	let tanTable[416] = 47; let tanTable[417] = 48; let tanTable[418] = 48; let tanTable[419] = 48; 
	let tanTable[420] = 48; let tanTable[421] = 48; let tanTable[422] = 48; let tanTable[423] = 49; 
	let tanTable[424] = 49; let tanTable[425] = 49; let tanTable[426] = 49; let tanTable[427] = 49; 
	let tanTable[428] = 49; let tanTable[429] = 49; let tanTable[430] = 50; let tanTable[431] = 50; 
	let tanTable[432] = 50; let tanTable[433] = 50; let tanTable[434] = 50; let tanTable[435] = 50; 
	let tanTable[436] = 51; let tanTable[437] = 51; let tanTable[438] = 51; let tanTable[439] = 51; 
	let tanTable[440] = 51; let tanTable[441] = 51; let tanTable[442] = 52; let tanTable[443] = 52; 
	let tanTable[444] = 52; let tanTable[445] = 52; let tanTable[446] = 52; let tanTable[447] = 52; 
	let tanTable[448] = 53; let tanTable[449] = 53; let tanTable[450] = 53; let tanTable[451] = 53; 
	let tanTable[452] = 53; let tanTable[453] = 53; let tanTable[454] = 54; let tanTable[455] = 54; 
	let tanTable[456] = 54; let tanTable[457] = 54; let tanTable[458] = 54; let tanTable[459] = 54; 
	let tanTable[460] = 55; let tanTable[461] = 55; let tanTable[462] = 55; let tanTable[463] = 55; 
	let tanTable[464] = 55; let tanTable[465] = 55; let tanTable[466] = 56; let tanTable[467] = 56; 
	let tanTable[468] = 56; let tanTable[469] = 56; let tanTable[470] = 56; let tanTable[471] = 56; 
	let tanTable[472] = 57; let tanTable[473] = 57; let tanTable[474] = 57; let tanTable[475] = 57; 
	let tanTable[476] = 57; let tanTable[477] = 57; let tanTable[478] = 58; let tanTable[479] = 58; 
	let tanTable[480] = 58; let tanTable[481] = 58; let tanTable[482] = 58; let tanTable[483] = 59; 
	let tanTable[484] = 59; let tanTable[485] = 59; let tanTable[486] = 59; let tanTable[487] = 59; 
	let tanTable[488] = 59; let tanTable[489] = 60; let tanTable[490] = 60; let tanTable[491] = 60; 
	let tanTable[492] = 60; let tanTable[493] = 60; let tanTable[494] = 61; let tanTable[495] = 61; 
	let tanTable[496] = 61; let tanTable[497] = 61; let tanTable[498] = 61; let tanTable[499] = 61; 
	let tanTable[500] = 62; let tanTable[501] = 62; let tanTable[502] = 62; let tanTable[503] = 62; 
	let tanTable[504] = 62; let tanTable[505] = 63; let tanTable[506] = 63; let tanTable[507] = 63; 
	let tanTable[508] = 63; let tanTable[509] = 63; let tanTable[510] = 64; let tanTable[511] = 64; 
	let tanTable[512] = 64; let tanTable[513] = 64; let tanTable[514] = 64; let tanTable[515] = 65; 
	let tanTable[516] = 65; let tanTable[517] = 65; let tanTable[518] = 65; let tanTable[519] = 65; 
	let tanTable[520] = 66; let tanTable[521] = 66; let tanTable[522] = 66; let tanTable[523] = 66; 
	let tanTable[524] = 66; let tanTable[525] = 67; let tanTable[526] = 67; let tanTable[527] = 67; 
	let tanTable[528] = 67; let tanTable[529] = 67; let tanTable[530] = 68; let tanTable[531] = 68; 
	let tanTable[532] = 68; let tanTable[533] = 68; let tanTable[534] = 68; let tanTable[535] = 69; 
	let tanTable[536] = 69; let tanTable[537] = 69; let tanTable[538] = 69; let tanTable[539] = 70; 
	let tanTable[540] = 70; let tanTable[541] = 70; let tanTable[542] = 70; let tanTable[543] = 70; 
	let tanTable[544] = 71; let tanTable[545] = 71; let tanTable[546] = 71; let tanTable[547] = 71; 
	let tanTable[548] = 71; let tanTable[549] = 72; let tanTable[550] = 72; let tanTable[551] = 72; 
	let tanTable[552] = 72; let tanTable[553] = 73; let tanTable[554] = 73; let tanTable[555] = 73; 
	let tanTable[556] = 73; let tanTable[557] = 74; let tanTable[558] = 74; let tanTable[559] = 74; 
	let tanTable[560] = 74; let tanTable[561] = 74; let tanTable[562] = 75; let tanTable[563] = 75; 
	let tanTable[564] = 75; let tanTable[565] = 75; let tanTable[566] = 76; let tanTable[567] = 76; 
	let tanTable[568] = 76; let tanTable[569] = 76; let tanTable[570] = 77; let tanTable[571] = 77; 
	let tanTable[572] = 77; let tanTable[573] = 77; let tanTable[574] = 77; let tanTable[575] = 78; 
	let tanTable[576] = 78; let tanTable[577] = 78; let tanTable[578] = 78; let tanTable[579] = 79; 
	let tanTable[580] = 79; let tanTable[581] = 79; let tanTable[582] = 79; let tanTable[583] = 80; 
	let tanTable[584] = 80; let tanTable[585] = 80; let tanTable[586] = 80; let tanTable[587] = 81; 
	let tanTable[588] = 81; let tanTable[589] = 81; let tanTable[590] = 81; let tanTable[591] = 82; 
	let tanTable[592] = 82; let tanTable[593] = 82; let tanTable[594] = 83; let tanTable[595] = 83; 
	let tanTable[596] = 83; let tanTable[597] = 83; let tanTable[598] = 84; let tanTable[599] = 84; 
	let tanTable[600] = 84; let tanTable[601] = 84; let tanTable[602] = 85; let tanTable[603] = 85; 
	let tanTable[604] = 85; let tanTable[605] = 85; let tanTable[606] = 86; let tanTable[607] = 86; 
	let tanTable[608] = 86; let tanTable[609] = 87; let tanTable[610] = 87; let tanTable[611] = 87; 
	let tanTable[612] = 87; let tanTable[613] = 88; let tanTable[614] = 88; let tanTable[615] = 88; 
	let tanTable[616] = 89; let tanTable[617] = 89; let tanTable[618] = 89; let tanTable[619] = 89; 
	let tanTable[620] = 90; let tanTable[621] = 90; let tanTable[622] = 90; let tanTable[623] = 91; 
	let tanTable[624] = 91; let tanTable[625] = 91; let tanTable[626] = 91; let tanTable[627] = 92; 
	let tanTable[628] = 92; let tanTable[629] = 92; let tanTable[630] = 93; let tanTable[631] = 93; 
	let tanTable[632] = 93; let tanTable[633] = 94; let tanTable[634] = 94; let tanTable[635] = 94; 
	let tanTable[636] = 95; let tanTable[637] = 95; let tanTable[638] = 95; let tanTable[639] = 95; 
	let tanTable[640] = 96; let tanTable[641] = 96; let tanTable[642] = 96; let tanTable[643] = 97; 
	let tanTable[644] = 97; let tanTable[645] = 97; let tanTable[646] = 98; let tanTable[647] = 98; 
	let tanTable[648] = 98; let tanTable[649] = 99; let tanTable[650] = 99; let tanTable[651] = 99; 
	let tanTable[652] = 100; let tanTable[653] = 100; let tanTable[654] = 100; let tanTable[655] = 101; 
	let tanTable[656] = 101; let tanTable[657] = 101; let tanTable[658] = 102; let tanTable[659] = 102; 
	let tanTable[660] = 102; let tanTable[661] = 103; let tanTable[662] = 103; let tanTable[663] = 104; 
	let tanTable[664] = 104; let tanTable[665] = 104; let tanTable[666] = 105; let tanTable[667] = 105; 
	let tanTable[668] = 105; let tanTable[669] = 106; let tanTable[670] = 106; let tanTable[671] = 106; 
	let tanTable[672] = 107; let tanTable[673] = 107; let tanTable[674] = 108; let tanTable[675] = 108; 
	let tanTable[676] = 108; let tanTable[677] = 109; let tanTable[678] = 109; let tanTable[679] = 109; 
	let tanTable[680] = 110; let tanTable[681] = 110; let tanTable[682] = 111; let tanTable[683] = 111; 
	let tanTable[684] = 111; let tanTable[685] = 112; let tanTable[686] = 112; let tanTable[687] = 113; 
	let tanTable[688] = 113; let tanTable[689] = 113; let tanTable[690] = 114; let tanTable[691] = 114; 
	let tanTable[692] = 115; let tanTable[693] = 115; let tanTable[694] = 115; let tanTable[695] = 116; 
	let tanTable[696] = 116; let tanTable[697] = 117; let tanTable[698] = 117; let tanTable[699] = 118; 
	let tanTable[700] = 118; let tanTable[701] = 118; let tanTable[702] = 119; let tanTable[703] = 119; 
	let tanTable[704] = 120; let tanTable[705] = 120; let tanTable[706] = 121; let tanTable[707] = 121; 
	let tanTable[708] = 122; let tanTable[709] = 122; let tanTable[710] = 122; let tanTable[711] = 123; 
	let tanTable[712] = 123; let tanTable[713] = 124; let tanTable[714] = 124; let tanTable[715] = 125; 
	let tanTable[716] = 125; let tanTable[717] = 126; let tanTable[718] = 126; let tanTable[719] = 127; 
	let tanTable[720] = 127; let tanTable[721] = 128; let tanTable[722] = 128; let tanTable[723] = 129; 
	let tanTable[724] = 129; let tanTable[725] = 130; let tanTable[726] = 130; let tanTable[727] = 131; 
	let tanTable[728] = 131; let tanTable[729] = 132; let tanTable[730] = 132; let tanTable[731] = 133; 
	let tanTable[732] = 133; let tanTable[733] = 134; let tanTable[734] = 134; let tanTable[735] = 135; 
	let tanTable[736] = 135; let tanTable[737] = 136; let tanTable[738] = 136; let tanTable[739] = 137; 
	let tanTable[740] = 137; let tanTable[741] = 138; let tanTable[742] = 139; let tanTable[743] = 139; 
	let tanTable[744] = 140; let tanTable[745] = 140; let tanTable[746] = 141; let tanTable[747] = 141; 
	let tanTable[748] = 142; let tanTable[749] = 143; let tanTable[750] = 143; let tanTable[751] = 144; 
	let tanTable[752] = 144; let tanTable[753] = 145; let tanTable[754] = 146; let tanTable[755] = 146; 
	let tanTable[756] = 147; let tanTable[757] = 147; let tanTable[758] = 148; let tanTable[759] = 149; 
	let tanTable[760] = 149; let tanTable[761] = 150; let tanTable[762] = 151; let tanTable[763] = 151; 
	let tanTable[764] = 152; let tanTable[765] = 153; let tanTable[766] = 153; let tanTable[767] = 154; 
	let tanTable[768] = 155; let tanTable[769] = 155; let tanTable[770] = 156; let tanTable[771] = 157; 
	let tanTable[772] = 157; let tanTable[773] = 158; let tanTable[774] = 159; let tanTable[775] = 159; 
	let tanTable[776] = 160; let tanTable[777] = 161; let tanTable[778] = 161; let tanTable[779] = 162; 
	let tanTable[780] = 163; let tanTable[781] = 164; let tanTable[782] = 164; let tanTable[783] = 165; 
	let tanTable[784] = 166; let tanTable[785] = 167; let tanTable[786] = 167; let tanTable[787] = 168; 
	let tanTable[788] = 169; let tanTable[789] = 170; let tanTable[790] = 171; let tanTable[791] = 171; 
	let tanTable[792] = 172; let tanTable[793] = 173; let tanTable[794] = 174; let tanTable[795] = 175; 
	let tanTable[796] = 175; let tanTable[797] = 176; let tanTable[798] = 177; let tanTable[799] = 178; 
	let tanTable[800] = 179; let tanTable[801] = 180; let tanTable[802] = 181; let tanTable[803] = 181; 
	let tanTable[804] = 182; let tanTable[805] = 183; let tanTable[806] = 184; let tanTable[807] = 185; 
	let tanTable[808] = 186; let tanTable[809] = 187; let tanTable[810] = 188; let tanTable[811] = 189; 
	let tanTable[812] = 190; let tanTable[813] = 191; let tanTable[814] = 192; let tanTable[815] = 193; 
	let tanTable[816] = 194; let tanTable[817] = 195; let tanTable[818] = 196; let tanTable[819] = 197; 
	let tanTable[820] = 198; let tanTable[821] = 199; let tanTable[822] = 200; let tanTable[823] = 201; 
	let tanTable[824] = 202; let tanTable[825] = 203; let tanTable[826] = 204; let tanTable[827] = 205; 
	let tanTable[828] = 206; let tanTable[829] = 208; let tanTable[830] = 209; let tanTable[831] = 210; 
	let tanTable[832] = 211; let tanTable[833] = 212; let tanTable[834] = 213; let tanTable[835] = 215; 
	let tanTable[836] = 216; let tanTable[837] = 217; let tanTable[838] = 218; let tanTable[839] = 219; 
	let tanTable[840] = 221; let tanTable[841] = 222; let tanTable[842] = 223; let tanTable[843] = 225; 
	let tanTable[844] = 226; let tanTable[845] = 227; let tanTable[846] = 229; let tanTable[847] = 230; 
	let tanTable[848] = 231; let tanTable[849] = 233; let tanTable[850] = 234; let tanTable[851] = 235; 
	let tanTable[852] = 237; let tanTable[853] = 238; let tanTable[854] = 240; let tanTable[855] = 241; 
	let tanTable[856] = 243; let tanTable[857] = 244; let tanTable[858] = 246; let tanTable[859] = 247; 
	let tanTable[860] = 249; let tanTable[861] = 251; let tanTable[862] = 252; let tanTable[863] = 254; 
	let tanTable[864] = 256; let tanTable[865] = 257; let tanTable[866] = 259; let tanTable[867] = 261; 
	let tanTable[868] = 262; let tanTable[869] = 264; let tanTable[870] = 266; let tanTable[871] = 268; 
	let tanTable[872] = 269; let tanTable[873] = 271; let tanTable[874] = 273; let tanTable[875] = 275; 
	let tanTable[876] = 277; let tanTable[877] = 279; let tanTable[878] = 281; let tanTable[879] = 283; 
	let tanTable[880] = 285; let tanTable[881] = 287; let tanTable[882] = 289; let tanTable[883] = 291; 
	let tanTable[884] = 293; let tanTable[885] = 296; let tanTable[886] = 298; let tanTable[887] = 300; 
	let tanTable[888] = 302; let tanTable[889] = 305; let tanTable[890] = 307; let tanTable[891] = 309; 
	let tanTable[892] = 312; let tanTable[893] = 314; let tanTable[894] = 317; let tanTable[895] = 319; 
	let tanTable[896] = 322; let tanTable[897] = 324; let tanTable[898] = 327; let tanTable[899] = 330; 
	let tanTable[900] = 332; let tanTable[901] = 335; let tanTable[902] = 338; let tanTable[903] = 341; 
	let tanTable[904] = 344; let tanTable[905] = 347; let tanTable[906] = 350; let tanTable[907] = 353; 
	let tanTable[908] = 356; let tanTable[909] = 359; let tanTable[910] = 362; let tanTable[911] = 366; 
	let tanTable[912] = 369; let tanTable[913] = 372; let tanTable[914] = 376; let tanTable[915] = 379; 
	let tanTable[916] = 383; let tanTable[917] = 386; let tanTable[918] = 390; let tanTable[919] = 394; 
	let tanTable[920] = 398; let tanTable[921] = 402; let tanTable[922] = 406; let tanTable[923] = 410; 
	let tanTable[924] = 414; let tanTable[925] = 418; let tanTable[926] = 423; let tanTable[927] = 427; 
	let tanTable[928] = 431; let tanTable[929] = 436; let tanTable[930] = 441; let tanTable[931] = 446; 
	let tanTable[932] = 450; let tanTable[933] = 455; let tanTable[934] = 461; let tanTable[935] = 466; 
	let tanTable[936] = 471; let tanTable[937] = 477; let tanTable[938] = 482; let tanTable[939] = 488; 
	let tanTable[940] = 494; let tanTable[941] = 500; let tanTable[942] = 506; let tanTable[943] = 512; 
	let tanTable[944] = 519; let tanTable[945] = 526; let tanTable[946] = 532; let tanTable[947] = 539; 
	let tanTable[948] = 546; let tanTable[949] = 554; let tanTable[950] = 561; let tanTable[951] = 569; 
	let tanTable[952] = 577; let tanTable[953] = 585; let tanTable[954] = 594; let tanTable[955] = 602; 
	let tanTable[956] = 611; let tanTable[957] = 621; let tanTable[958] = 630; let tanTable[959] = 640; 
	let tanTable[960] = 650; let tanTable[961] = 660; let tanTable[962] = 671; let tanTable[963] = 682; 
	let tanTable[964] = 693; let tanTable[965] = 705; let tanTable[966] = 717; let tanTable[967] = 730; 
	let tanTable[968] = 743; let tanTable[969] = 757; let tanTable[970] = 771; let tanTable[971] = 785; 
	let tanTable[972] = 801; let tanTable[973] = 816; let tanTable[974] = 833; let tanTable[975] = 850; 
	let tanTable[976] = 868; let tanTable[977] = 886; let tanTable[978] = 905; let tanTable[979] = 926; 
	let tanTable[980] = 947; let tanTable[981] = 969; let tanTable[982] = 992; let tanTable[983] = 1016; 
	let tanTable[984] = 1042; let tanTable[985] = 1069; let tanTable[986] = 1097; let tanTable[987] = 1126; 
	let tanTable[988] = 1158; let tanTable[989] = 1191; let tanTable[990] = 1226; let tanTable[991] = 1263; 
	let tanTable[992] = 1303; let tanTable[993] = 1345; let tanTable[994] = 1390; let tanTable[995] = 1438; 
	let tanTable[996] = 1489; let tanTable[997] = 1544; let tanTable[998] = 1604; let tanTable[999] = 1668; 
	let tanTable[1000] = 1738; let tanTable[1001] = 1813; let tanTable[1002] = 1896; let tanTable[1003] = 1986; 
	let tanTable[1004] = 2085; let tanTable[1005] = 2195; let tanTable[1006] = 2317; let tanTable[1007] = 2454; 
	let tanTable[1008] = 2607; let tanTable[1009] = 2781; let tanTable[1010] = 2980; let tanTable[1011] = 3209; 
	let tanTable[1012] = 3476; let tanTable[1013] = 3793; let tanTable[1014] = 4172; let tanTable[1015] = 4635; 
	let tanTable[1016] = 5215; let tanTable[1017] = 5960; let tanTable[1018] = 6953; let tanTable[1019] = 8344; 
	let tanTable[1020] = 10430; let tanTable[1021] = 13907; let tanTable[1022] = 20861; let tanTable[1023] = 32767;
	let tanTable[1024] = 32767;

	// To prevent overflow in computing ray intercepts with grid lines,
	// we need to set limits on the values of deltaX / deltaY. Since they are computationally
	// intensive and known in advance, we provide them in a table
	// Fortunately the cases of potential overflow can never lead to a sensible result
	// for the intercept
	let maxDelta = Array.new(82);
	let maxDelta[81] = 63; let maxDelta[80] = 63; let maxDelta[79] = 62; let maxDelta[78] = 61; 
	let maxDelta[77] = 60; let maxDelta[76] = 60; let maxDelta[75] = 59; let maxDelta[74] = 58; 
	let maxDelta[73] = 57; let maxDelta[72] = 56; let maxDelta[71] = 56; let maxDelta[70] = 55; 
	let maxDelta[69] = 54; let maxDelta[68] = 53; let maxDelta[67] = 52; let maxDelta[66] = 52; 
	let maxDelta[65] = 51; let maxDelta[64] = 50; let maxDelta[63] = 49; let maxDelta[62] = 48; 
	let maxDelta[61] = 48; let maxDelta[60] = 47; let maxDelta[59] = 46; let maxDelta[58] = 45; 
	let maxDelta[57] = 44; let maxDelta[56] = 44; let maxDelta[55] = 43; let maxDelta[54] = 42; 
	let maxDelta[53] = 41; let maxDelta[52] = 40; let maxDelta[51] = 40; let maxDelta[50] = 39; 
	let maxDelta[49] = 38; let maxDelta[48] = 37; let maxDelta[47] = 36; let maxDelta[46] = 36; 
	let maxDelta[45] = 35; let maxDelta[44] = 34; let maxDelta[43] = 33; let maxDelta[42] = 33; 
	let maxDelta[41] = 32; let maxDelta[40] = 31; let maxDelta[39] = 30; let maxDelta[38] = 29; 
	let maxDelta[37] = 29; let maxDelta[36] = 28; let maxDelta[35] = 27; let maxDelta[34] = 26; 
	let maxDelta[33] = 25; let maxDelta[32] = 25; let maxDelta[31] = 24; let maxDelta[30] = 23; 
	let maxDelta[29] = 22; let maxDelta[28] = 22; let maxDelta[27] = 21; let maxDelta[26] = 20; 
	let maxDelta[25] = 19; let maxDelta[24] = 18; let maxDelta[23] = 18; let maxDelta[22] = 17; 
	let maxDelta[21] = 16; let maxDelta[20] = 15; let maxDelta[19] = 14; let maxDelta[18] = 14; 
	let maxDelta[17] = 13; let maxDelta[16] = 12; let maxDelta[15] = 11; let maxDelta[14] = 10; 
	let maxDelta[13] = 10; let maxDelta[12] = 9; let maxDelta[11] = 8; let maxDelta[10] = 7; 
	let maxDelta[9] = 7; let maxDelta[8] = 6; let maxDelta[7] = 5; let maxDelta[6] = 4; 
	let maxDelta[5] = 3; let maxDelta[4] = 3; let maxDelta[3] = 2; let maxDelta[2] = 1; 
	let maxDelta[1] = 0; let maxDelta[0] = 0; 

	// Arctan is only required for values between -45 degrees and 45 degrees with 256 gradations
	// corresponding to the 256 pixels on the screen
	let atanTable = Array.new(256);
	let atanTable[0] = -511; let atanTable[1] = -508; let atanTable[2] = -506; let atanTable[3] = -503; 
	let atanTable[4] = -501; let atanTable[5] = -498; let atanTable[6] = -495; let atanTable[7] = -493; 
	let atanTable[8] = -490; let atanTable[9] = -487; let atanTable[10] = -485; let atanTable[11] = -482; 
	let atanTable[12] = -479; let atanTable[13] = -476; let atanTable[14] = -473; let atanTable[15] = -470; 
	let atanTable[16] = -468; let atanTable[17] = -465; let atanTable[18] = -462; let atanTable[19] = -459; 
	let atanTable[20] = -456; let atanTable[21] = -453; let atanTable[22] = -450; let atanTable[23] = -447; 
	let atanTable[24] = -444; let atanTable[25] = -441; let atanTable[26] = -438; let atanTable[27] = -434; 
	let atanTable[28] = -431; let atanTable[29] = -428; let atanTable[30] = -425; let atanTable[31] = -422; 
	let atanTable[32] = -418; let atanTable[33] = -415; let atanTable[34] = -412; let atanTable[35] = -409; 
	let atanTable[36] = -405; let atanTable[37] = -402; let atanTable[38] = -398; let atanTable[39] = -395; 
	let atanTable[40] = -392; let atanTable[41] = -388; let atanTable[42] = -385; let atanTable[43] = -381; 
	let atanTable[44] = -378; let atanTable[45] = -374; let atanTable[46] = -370; let atanTable[47] = -367; 
	let atanTable[48] = -363; let atanTable[49] = -359; let atanTable[50] = -356; let atanTable[51] = -352; 
	let atanTable[52] = -348; let atanTable[53] = -345; let atanTable[54] = -341; let atanTable[55] = -337; 
	let atanTable[56] = -333; let atanTable[57] = -329; let atanTable[58] = -325; let atanTable[59] = -321; 
	let atanTable[60] = -317; let atanTable[61] = -313; let atanTable[62] = -309; let atanTable[63] = -305; 
	let atanTable[64] = -301; let atanTable[65] = -297; let atanTable[66] = -293; let atanTable[67] = -289; 
	let atanTable[68] = -285; let atanTable[69] = -281; let atanTable[70] = -276; let atanTable[71] = -272; 
	let atanTable[72] = -268; let atanTable[73] = -264; let atanTable[74] = -259; let atanTable[75] = -255; 
	let atanTable[76] = -251; let atanTable[77] = -246; let atanTable[78] = -242; let atanTable[79] = -237; 
	let atanTable[80] = -233; let atanTable[81] = -228; let atanTable[82] = -224; let atanTable[83] = -219; 
	let atanTable[84] = -215; let atanTable[85] = -210; let atanTable[86] = -206; let atanTable[87] = -201; 
	let atanTable[88] = -196; let atanTable[89] = -192; let atanTable[90] = -187; let atanTable[91] = -182; 
	let atanTable[92] = -178; let atanTable[93] = -173; let atanTable[94] = -168; let atanTable[95] = -163; 
	let atanTable[96] = -159; let atanTable[97] = -154; let atanTable[98] = -149; let atanTable[99] = -144; 
	let atanTable[100] = -139; let atanTable[101] = -135; let atanTable[102] = -130; let atanTable[103] = -125; 
	let atanTable[104] = -120; let atanTable[105] = -115; let atanTable[106] = -110; let atanTable[107] = -105; 
	let atanTable[108] = -100; let atanTable[109] = -95; let atanTable[110] = -90; let atanTable[111] = -85; 
	let atanTable[112] = -80; let atanTable[113] = -75; let atanTable[114] = -70; let atanTable[115] = -65; 
	let atanTable[116] = -60; let atanTable[117] = -55; let atanTable[118] = -50; let atanTable[119] = -45; 
	let atanTable[120] = -40; let atanTable[121] = -35; let atanTable[122] = -30; let atanTable[123] = -24; 
	let atanTable[124] = -19; let atanTable[125] = -14; let atanTable[126] = -9; let atanTable[127] = -4; 
	let atanTable[128] = 0; let atanTable[129] = 5; let atanTable[130] = 10; let atanTable[131] = 15; 
	let atanTable[132] = 20; let atanTable[133] = 25; let atanTable[134] = 31; let atanTable[135] = 36; 
	let atanTable[136] = 41; let atanTable[137] = 46; let atanTable[138] = 51; let atanTable[139] = 56; 
	let atanTable[140] = 61; let atanTable[141] = 66; let atanTable[142] = 71; let atanTable[143] = 76; 
	let atanTable[144] = 81; let atanTable[145] = 86; let atanTable[146] = 91; let atanTable[147] = 96; 
	let atanTable[148] = 101; let atanTable[149] = 106; let atanTable[150] = 111; let atanTable[151] = 116; 
	let atanTable[152] = 121; let atanTable[153] = 126; let atanTable[154] = 131; let atanTable[155] = 136; 
	let atanTable[156] = 140; let atanTable[157] = 145; let atanTable[158] = 150; let atanTable[159] = 155; 
	let atanTable[160] = 160; let atanTable[161] = 164; let atanTable[162] = 169; let atanTable[163] = 174; 
	let atanTable[164] = 179; let atanTable[165] = 183; let atanTable[166] = 188; let atanTable[167] = 193; 
	let atanTable[168] = 197; let atanTable[169] = 202; let atanTable[170] = 207; let atanTable[171] = 211; 
	let atanTable[172] = 216; let atanTable[173] = 220; let atanTable[174] = 225; let atanTable[175] = 229; 
	let atanTable[176] = 234; let atanTable[177] = 238; let atanTable[178] = 243; let atanTable[179] = 247; 
	let atanTable[180] = 252; let atanTable[181] = 256; let atanTable[182] = 260; let atanTable[183] = 265; 
	let atanTable[184] = 269; let atanTable[185] = 273; let atanTable[186] = 277; let atanTable[187] = 282; 
	let atanTable[188] = 286; let atanTable[189] = 290; let atanTable[190] = 294; let atanTable[191] = 298; 
	let atanTable[192] = 302; let atanTable[193] = 306; let atanTable[194] = 310; let atanTable[195] = 314; 
	let atanTable[196] = 318; let atanTable[197] = 322; let atanTable[198] = 326; let atanTable[199] = 330; 
	let atanTable[200] = 334; let atanTable[201] = 338; let atanTable[202] = 342; let atanTable[203] = 346; 
	let atanTable[204] = 349; let atanTable[205] = 353; let atanTable[206] = 357; let atanTable[207] = 360; 
	let atanTable[208] = 364; let atanTable[209] = 368; let atanTable[210] = 371; let atanTable[211] = 375; 
	let atanTable[212] = 379; let atanTable[213] = 382; let atanTable[214] = 386; let atanTable[215] = 389; 
	let atanTable[216] = 393; let atanTable[217] = 396; let atanTable[218] = 399; let atanTable[219] = 403; 
	let atanTable[220] = 406; let atanTable[221] = 410; let atanTable[222] = 413; let atanTable[223] = 416; 
	let atanTable[224] = 419; let atanTable[225] = 423; let atanTable[226] = 426; let atanTable[227] = 429; 
	let atanTable[228] = 432; let atanTable[229] = 435; let atanTable[230] = 439; let atanTable[231] = 442; 
	let atanTable[232] = 445; let atanTable[233] = 448; let atanTable[234] = 451; let atanTable[235] = 454; 
	let atanTable[236] = 457; let atanTable[237] = 460; let atanTable[238] = 463; let atanTable[239] = 466; 
	let atanTable[240] = 469; let atanTable[241] = 471; let atanTable[242] = 474; let atanTable[243] = 477; 
	let atanTable[244] = 480; let atanTable[245] = 483; let atanTable[246] = 486; let atanTable[247] = 488; 
	let atanTable[248] = 491; let atanTable[249] = 494; let atanTable[250] = 496; let atanTable[251] = 499; 
	let atanTable[252] = 502; let atanTable[253] = 504; let atanTable[254] = 507; let atanTable[255] = 509; 

	return;
    }

}
