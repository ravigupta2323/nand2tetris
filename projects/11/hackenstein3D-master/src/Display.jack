// Hackenstein-3D: Escape from Castle Hackenstein part 2
// by James Leibert February 2017

// Display module handles the following services:
// ... rendering the walls with the correct textures and heights
// ... rendering the bitmaps
// ... rendering text to the screen

class Display {

    // Bit-masks to simplify rendering
    static Array patternMask;

    // Display strings
    // Note that the OS implementation leaks memory, so we have to
    // pre-initialise the strings
    static String stepStr, targetStr, text1, text2, text3;

    // Screen location for rendering
    static int screenLocation;

    // 8 pattern strip counters for rendering
    // ... cp is pattern segment counter
    // ... sp is the current pattern segment (0-7)
    // ... pt is the pattern mask for the top segment
    // ... pb is the pattern mask for the bottom segment
    // ... pp is the bit-mask for the bottom segment
    // ... wp is the pattern word for this pixel
    // ... wd is the distance word for this pixel
    static int cp0, cp1, cp2, cp3, cp4, cp5, cp6, cp7;
    static int sp0, sp1, sp2, sp3, sp4, sp5, sp6, sp7;
    static boolean pt0, pt1, pt2, pt3, pt4, pt5, pt6, pt7;
    static boolean pb0, pb1, pb2, pb3, pb4, pb5, pb6, pb7;
    static int pp0, pp1, pp2, pp3, pp4, pp5, pp6, pp7;
    static int wp0, wp1, wp2, wp3, wp4, wp5, wp6, wp7;
    static int wd0, wd1, wd2, wd3, wd4, wd5, wd6, wd7;

    /** Initialise the strings, bitmaps and bit-masks*/
    function void init() {

	var int i,p,q;

	let stepStr = String.new(10);
	let targetStr = String.new(10);
	let text1 = " Score  ";
	let text2 = "/3  Actions  ";
	let text3 = " ";
	let screenLocation = 16384;

	// BIT MASKS
	// These simplify the maths as the Hack machine code has no
	// right-shift operator, so this avoids lots of unncessary
	// multiplications
	
	let patternMask = Array.new(16);
	let i = 0; let p = 3; let q = 1;
	while (i < 16) {
	    let patternMask[i] = q;
	    let i = i + 1;
	    let p = p + p + p + p;
	    let q = q + q;
	}

	return;
    }

    /** Wall rendering - middle-out! */
    function void walls(int wallDistances, int wallPatterns) {

	// Rendering walls is complicated in order to avoid floating point multiplications and 
	// divisions.  8 vertical strips are rendered at the same time, with 8 sets of counters
	// keeping track of which segment to render where.
	// Because the geometry is vertically symmetrical, the renderer starts in the middle
	// and renders up and down at the same time.
	// Note that it renders in 2x2 blocks, reducing the effective resolution of
	// the screen to 256 x 128 pixels. Trying to render full resolution is MUCH
	// slower.
	// Since original version: significant (x2) speed-up through:
	// ... loop unrolling (sorry, not very good procedural code)
	// ... eliminating arrays in the loop counters (statics are faster)
	// ... direct write to screen memory (avoids function call overhead)
	// ... additional pre-calculations and hard-wire numbers (yuk, but fast)
	// Sorry! This is really obscure, but it is the single biggest bottleneck,
	// so you will have to live with some tricky math.

	var int pixel, strip, vPos;  /* which bit of the screen to render to*/
	var int lineT, memValT;      /* location and contents of word in top-half of the screen */
	var int lineB, memValB;      /* location and contents of word in bottom-half of the screen */
	var int wp;

	let strip = 0; let pixel = 0;
	
	while (strip < 32) {

	    // Set up counters for each of the 8 vertical patterns in this strip
	    let cp0 = 0; let cp1 = 0; let cp2 = 0; let cp3 = 0; let cp4 = 0; let cp5 = 0; let cp6 = 0; let cp7 = 0; 
	    let sp0 = 7; let sp1 = 7; let sp2 = 7; let sp3 = 7; let sp4 = 7; let sp5 = 7; let sp6 = 7; let sp7 = 7;
	    let pp0 = 256; let pp1 = 256; let pp2 = 256; let pp3 = 256; let pp4 = 256; let pp5 = 256; let pp6 = 256; let pp7 = 256; 
	    let wp0 = wallPatterns[pixel    ]; let wd0 = wallDistances[pixel    ];
	    let wp1 = wallPatterns[pixel + 1]; let wd1 = wallDistances[pixel + 1];
	    let wp2 = wallPatterns[pixel + 2]; let wd2 = wallDistances[pixel + 2];
	    let wp3 = wallPatterns[pixel + 3]; let wd3 = wallDistances[pixel + 3];
	    let wp4 = wallPatterns[pixel + 4]; let wd4 = wallDistances[pixel + 4];
	    let wp5 = wallPatterns[pixel + 5]; let wd5 = wallDistances[pixel + 5];
	    let wp6 = wallPatterns[pixel + 6]; let wd6 = wallDistances[pixel + 6];
	    let wp7 = wallPatterns[pixel + 7]; let wd7 = wallDistances[pixel + 7];
	    let pt0 = ~((wp0 & 128) = 0);  let pb0 = ~((wp0 & 256) = 0);
	    let pt1 = ~((wp1 & 128) = 0);  let pb1 = ~((wp1 & 256) = 0);
	    let pt2 = ~((wp2 & 128) = 0);  let pb2 = ~((wp2 & 256) = 0);
	    let pt3 = ~((wp3 & 128) = 0);  let pb3 = ~((wp3 & 256) = 0);
	    let pt4 = ~((wp4 & 128) = 0);  let pb4 = ~((wp4 & 256) = 0);
	    let pt5 = ~((wp5 & 128) = 0);  let pb5 = ~((wp5 & 256) = 0);
	    let pt6 = ~((wp6 & 128) = 0);  let pb6 = ~((wp6 & 256) = 0);
	    let pt7 = ~((wp7 & 128) = 0);  let pb7 = ~((wp7 & 256) = 0);

	    let lineT = 4064 + strip; /* memory location for the mid-point of this strip */
	    let lineB = 4096 + strip; /* memory location for start of bottom-half */

	    // Count which segment we are rendering and fetch the pattern value to draw
	    let vPos = 63;
	    while (vPos > -1) {
		
		let memValT = 0; let memValB = 0;

		// Pattern strip 0
		if (sp0 > -1) {
		    if (pt0) {
			let memValT = memValT + 3;
		    }
		    if (pb0) {
			let memValB = memValB + 3;
		    }
		}
		let cp0 = cp0 + wd0;
		while (cp0 > 512) {
		    let cp0 = cp0 - 512;
		    let sp0 = sp0 - 1;
		    let pp0 = pp0 + pp0;
		    let pt0 = ~((wp0 & patternMask[sp0]) = 0);
		    let pb0 = ~((wp0 & pp0) = 0);
		}

		// Pattern strip 1
		if (sp1 > -1) {
		    if (pt1) {
			let memValT = memValT + 12;
		    }
		    if (pb1) {
			let memValB = memValB + 12;
		    }
		}
		let cp1 = cp1 + wd1;
		while (cp1 > 512) {
		    let cp1 = cp1 - 512;
		    let sp1 = sp1 - 1;
		    let pp1 = pp1 + pp1;
		    let pt1 = ~((wp1 & patternMask[sp1]) = 0);
		    let pb1 = ~((wp1 & pp1) = 0);
		}

		// Pattern strip 2
		if (sp2 > -1) {
		    if (pt2) {
			let memValT = memValT + 48;
		    }
		    if (pb2) {
			let memValB = memValB + 48;
		    }
		}
		let cp2 = cp2 + wd2;
		while (cp2 > 512) {
		    let cp2 = cp2 - 512;
		    let sp2 = sp2 - 1;
		    let pp2 = pp2 + pp2;
		    let pt2 = ~((wp2 & patternMask[sp2]) = 0);
		    let pb2 = ~((wp2 & pp2) = 0);
		}

		// Pattern strip 3
		if (sp3 > -1) {
		    if (pt3) {
			let memValT = memValT + 192;
		    }
		    if (pb3) {
			let memValB = memValB + 192;
		    }
		}
		let cp3 = cp3 + wd3;
		while (cp3 > 512) {
		    let cp3 = cp3 - 512;
		    let sp3 = sp3 - 1;
		    let pp3 = pp3 + pp3;
		    let pt3 = ~((wp3 & patternMask[sp3]) = 0);
		    let pb3 = ~((wp3 & pp3) = 0);
		}

		// Pattern strip 4
		if (sp4 > -1) {
		    if (pt4) {
			let memValT = memValT + 768;
		    }
		    if (pb4) {
			let memValB = memValB + 768;
		    }
		}
		let cp4 = cp4 + wd4;
		while (cp4 > 512) {
		    let cp4 = cp4 - 512;
		    let sp4 = sp4 - 1;
		    let pp4 = pp4 + pp4;
		    let pt4 = ~((wp4 & patternMask[sp4]) = 0);
		    let pb4 = ~((wp4 & pp4) = 0);
		}

		// Pattern strip 5
		if (sp5 > -1) {
		    if (pt5) {
			let memValT = memValT + 3072;
		    }
		    if (pb5) {
			let memValB = memValB + 3072;
		    }
		}
		let cp5 = cp5 + wd5;
		while (cp5 > 512) {
		    let cp5 = cp5 - 512;
		    let sp5 = sp5 - 1;
		    let pp5 = pp5 + pp5;
		    let pt5 = ~((wp5 & patternMask[sp5]) = 0);
		    let pb5 = ~((wp5 & pp5) = 0);
		}

		// Pattern strip 6
		if (sp6 > -1) {
		    if (pt6) {
			let memValT = memValT + 12288;
		    }
		    if (pb6) {
			let memValB = memValB + 12288;
		    }
		}
		let cp6 = cp6 + wd6;
		while (cp6 > 512) {
		    let cp6 = cp6 - 512;
		    let sp6 = sp6 - 1;
		    let pp6 = pp6 + pp6;
		    let pt6 = ~((wp6 & patternMask[sp6]) = 0);
		    let pb6 = ~((wp6 & pp6) = 0);
		}

		// Pattern strip 7
		if (sp7 > -1) {
		    if (pt7) {
			let memValT = memValT - 16384;
		    }
		    if (pb7) {
			let memValB = memValB - 16384;
		    }
		}
		let cp7 = cp7 + wd7;
		while (cp7 > 512) {
		    let cp7 = cp7 - 512;
		    let sp7 = sp7 - 1;
		    let pp7 = pp7 + pp7;
		    let pt7 = ~((wp7 & patternMask[sp7]) = 0);
		    let pb7 = ~((wp7 & pp7) = 0);
		}		

		// Draw the pixel values for the words in top and bottom half
		// by writing directly into the screen memory. Since the resolution
		// in the game is half the screen resolution we have to write each
		// value twice for each of the top and bottom halves.
		let screenLocation[lineT] = memValT;
		let screenLocation[lineB] = memValB;
		let lineT = lineT - 32; let lineB = lineB + 32;
		let screenLocation[lineT] = memValT;
		let screenLocation[lineB] = memValB;
		let lineT = lineT - 32; let lineB = lineB + 32;

		let vPos = vPos - 1;
	    } // END WHILE (vPos)
	    
	    let strip = strip + 1;
	    let pixel = pixel + 8;
	} // END WHILE (strip)

	return;
    }

    /** Render the number of targets hit and steps taken */
    function void scores(int targets, int steps) {

	// Display the scores
	// Must pre-initialise the text or else the OS leaks and
	// gives a heap overflow error
	do targetStr.setInt(targets);
	do stepStr.setInt(steps);
	do Output.moveCursor(0,35);
	do Output.printString(text1); /* " Score  " */
	do Output.printString(targetStr);
	do Output.printString(text2); /* "/3  Actions  " */
	do Output.printString(stepStr);
	do Output.printString(text3); /* " " */

	return;
    }

    /** Startup screen */
    function void startUp() {
	// Note that Jack Compiler incorrectly reads the '\' character
	// as a control character so they have to be doubled up in the
	// input string
	do Display.printString( 2, 18, "  H A C K E N S T E I N ");
	do Display.printString( 4, 18, "     ####\\   ####\\ ");
	do Display.printString( 5, 18, "     \\\\\\\\#\\  #\\\\\\\\#\\ ");
	do Display.printString( 6, 18, "         #\\  #\\    #\\ ");
	do Display.printString( 7, 18, "      ####\\  #\\    #\\ ");
	do Display.printString( 8, 18, "      \\\\\\#\\  #\\    #\\ ");
	do Display.printString( 9, 18, "         #\\  #\\   #\\\\ ");
	do Display.printString(10, 18, "     #####\\  #####\\\\ ");
	do Display.printString(11, 18, "     \\\\\\\\\\\\  \\\\\\\\\\\\ ");
	do Display.printString(13, 12, "Escape from Castle Hackenstein Part II");
	do Display.printString(19, 0, "Use arrow keys to move. Press SPACE to shoot.");
	do Display.printString(20, 0, "Destroy the targets and find the exit.");
	do Display.printString(22, 0, "                                      [Press SPACE to start]");
	return;
    }

    /** Render the splash screen at the end of the game */
    function void splash_screen(String line1, String line2) {

	var char key;
	
	// Clear the screen
	do Screen.clearScreen();

	// Display the text in the middle of the screen
	do Output.moveCursor(10, 25);
	do Output.printString(line1);
	do Output.moveCursor(11, 25);
	do Output.printString(line2);

	// Display credits
	do Display.printString(21, 40, "James Leibert 2017");

	// Wait for a key press to finish
	while (key = 0) {
	    let key = Keyboard.keyPressed();
	}

	// Finish
	return;
	
    }

    /** String display and cleanup */
	function void printString(int r, int c, String s) {
	do Output.moveCursor(r, c);
	do Output.printString(s);
	do s.dispose();
	return;
    }
    
    /** Cleans up the static arrays and strings */
    function void cleanup() {
	do patternMask.dispose();
	do stepStr.dispose();
	do targetStr.dispose();
	do text1.dispose(); do text2.dispose(); do text3.dispose();
	return;
    }

    /** Draw the sight */
    function void drawSightClear() {
	let screenLocation[3887] = screenLocation[3887] | (~32767); 
	let screenLocation[3888] = screenLocation[3888] | 1; 
	let screenLocation[3919] = screenLocation[3919] | (~32767); 
	let screenLocation[3920] = screenLocation[3920] | 1; 
	let screenLocation[3951] = screenLocation[3951] | (~32767); 
	let screenLocation[3952] = screenLocation[3952] | 1; 
	let screenLocation[3983] = screenLocation[3983] | (~32767); 
	let screenLocation[3984] = screenLocation[3984] | 1; 
	let screenLocation[4015] = screenLocation[4015] | (~32767); 
	let screenLocation[4016] = screenLocation[4016] | 1; 
	let screenLocation[4047] = screenLocation[4047] | (~32767); 
	let screenLocation[4048] = screenLocation[4048] | 1; 
	let screenLocation[4079] = screenLocation[4079] | -512; 
	let screenLocation[4080] = screenLocation[4080] | 127; 
	let screenLocation[4111] = screenLocation[4111] | -512; 
	let screenLocation[4112] = screenLocation[4112] | 127; 
	let screenLocation[4143] = screenLocation[4143] | (~32767); 
	let screenLocation[4144] = screenLocation[4144] | 1; 
	let screenLocation[4175] = screenLocation[4175] | (~32767); 
	let screenLocation[4176] = screenLocation[4176] | 1; 
	let screenLocation[4207] = screenLocation[4207] | (~32767); 
	let screenLocation[4208] = screenLocation[4208] | 1; 
	let screenLocation[4239] = screenLocation[4239] | (~32767); 
	let screenLocation[4240] = screenLocation[4240] | 1; 
	let screenLocation[4271] = screenLocation[4271] | (~32767); 
	let screenLocation[4272] = screenLocation[4272] | 1; 
	let screenLocation[4303] = screenLocation[4303] | (~32767); 
	let screenLocation[4304] = screenLocation[4304] | 1; 
	return;
    }

    /** Draw the sight, with bullet hitting the wall */
    function void drawSightFired() {
	let screenLocation[3887] = screenLocation[3887] | (~32767); 
	let screenLocation[3888] = screenLocation[3888] | 65; 
	let screenLocation[3919] = screenLocation[3919] | (~32767); 
	let screenLocation[3920] = screenLocation[3920] | 1; 
	let screenLocation[3951] = screenLocation[3951] | -8192; 
	let screenLocation[3952] = screenLocation[3952] | 7; 
	let screenLocation[3983] = screenLocation[3983] | -8192; 
	let screenLocation[3984] = screenLocation[3984] | 7; 
	let screenLocation[4015] = screenLocation[4015] | -2048; 
	let screenLocation[4016] = screenLocation[4016] | 31; 
	let screenLocation[4047] = screenLocation[4047] | -2048; 
	let screenLocation[4048] = screenLocation[4048] | 31; 
	let screenLocation[4079] = screenLocation[4079] | -512; 
	let screenLocation[4080] = screenLocation[4080] | 127; 
	let screenLocation[4111] = screenLocation[4111] | -512; 
	let screenLocation[4112] = screenLocation[4112] | 127; 
	let screenLocation[4143] = screenLocation[4143] | -2048; 
	let screenLocation[4144] = screenLocation[4144] | 31; 
	let screenLocation[4175] = screenLocation[4175] | -2048; 
	let screenLocation[4176] = screenLocation[4176] | 31; 
	let screenLocation[4207] = screenLocation[4207] | -7168; 
	let screenLocation[4208] = screenLocation[4208] | 7; 
	let screenLocation[4239] = screenLocation[4239] | -8192; 
	let screenLocation[4240] = screenLocation[4240] | 7; 
	let screenLocation[4271] = screenLocation[4271] | (~32767); 
	let screenLocation[4272] = screenLocation[4272] | 1; 
	let screenLocation[4303] = screenLocation[4303] | (~32767); 
	let screenLocation[4304] = screenLocation[4304] | 1; 
	return;
    }

    /** Draw the pistol */
    function void drawPistolClear() {
	let screenLocation[6288] = screenLocation[6288] | -16384; 
	let screenLocation[6320] = screenLocation[6320] | -16384; 
	let screenLocation[6352] = screenLocation[6352] | -4096; 
	let screenLocation[6353] = screenLocation[6353] | 15; 
	let screenLocation[6384] = screenLocation[6384] | -4096; 
	let screenLocation[6385] = screenLocation[6385] | 15; 
	let screenLocation[6416] = screenLocation[6416] | -1024; 
	let screenLocation[6417] = screenLocation[6417] | 63; 
	let screenLocation[6448] = screenLocation[6448] | -1024; 
	let screenLocation[6449] = screenLocation[6449] | 63; 
	let screenLocation[6480] = screenLocation[6480] | -1024; 
	let screenLocation[6481] = screenLocation[6481] | 255; 
	let screenLocation[6512] = screenLocation[6512] | -1024; 
	let screenLocation[6513] = screenLocation[6513] | 255; 
	let screenLocation[6544] = screenLocation[6544] | -1024; 
	let screenLocation[6545] = screenLocation[6545] | 1023; 
	let screenLocation[6576] = screenLocation[6576] | -1024; 
	let screenLocation[6577] = screenLocation[6577] | 1023; 
	let screenLocation[6608] = screenLocation[6608] | -4096; 
	let screenLocation[6609] = screenLocation[6609] | 4095; 
	let screenLocation[6640] = screenLocation[6640] | -4096; 
	let screenLocation[6641] = screenLocation[6641] | 4095; 
	let screenLocation[6672] = screenLocation[6672] | -16384; 
	let screenLocation[6673] = screenLocation[6673] | -1; 
	let screenLocation[6704] = screenLocation[6704] | -16384; 
	let screenLocation[6705] = screenLocation[6705] | -1; 
	let screenLocation[6737] = screenLocation[6737] | -1; 
	let screenLocation[6738] = screenLocation[6738] | 3; 
	let screenLocation[6769] = screenLocation[6769] | -1; 
	let screenLocation[6770] = screenLocation[6770] | 3; 
	let screenLocation[6801] = screenLocation[6801] | -1; 
	let screenLocation[6802] = screenLocation[6802] | 15; 
	let screenLocation[6833] = screenLocation[6833] | -1; 
	let screenLocation[6834] = screenLocation[6834] | 15; 
	let screenLocation[6865] = screenLocation[6865] | -1; 
	let screenLocation[6866] = screenLocation[6866] | 63; 
	let screenLocation[6897] = screenLocation[6897] | -1; 
	let screenLocation[6898] = screenLocation[6898] | 63; 
	let screenLocation[6929] = screenLocation[6929] | 16383; 
	let screenLocation[6930] = screenLocation[6930] | 780; 
	let screenLocation[6961] = screenLocation[6961] | 16383; 
	let screenLocation[6962] = screenLocation[6962] | 780; 
	let screenLocation[6993] = screenLocation[6993] | 16332; 
	let screenLocation[6994] = screenLocation[6994] | 768; 
	let screenLocation[7025] = screenLocation[7025] | 16332; 
	let screenLocation[7026] = screenLocation[7026] | 768; 
	let screenLocation[7057] = screenLocation[7057] | -196; 
	let screenLocation[7058] = screenLocation[7058] | 4095; 
	let screenLocation[7089] = screenLocation[7089] | -196; 
	let screenLocation[7090] = screenLocation[7090] | 4095; 
	let screenLocation[7121] = screenLocation[7121] | -784; 
	let screenLocation[7122] = screenLocation[7122] | 4095; 
	let screenLocation[7153] = screenLocation[7153] | -784; 
	let screenLocation[7154] = screenLocation[7154] | 4095; 
	let screenLocation[7185] = screenLocation[7185] | -16; 
	let screenLocation[7186] = screenLocation[7186] | 4095; 
	let screenLocation[7217] = screenLocation[7217] | -16; 
	let screenLocation[7218] = screenLocation[7218] | 4095; 
	let screenLocation[7249] = screenLocation[7249] | -16; 
	let screenLocation[7250] = screenLocation[7250] | 4095; 
	let screenLocation[7281] = screenLocation[7281] | -16; 
	let screenLocation[7282] = screenLocation[7282] | 4095; 
	let screenLocation[7313] = screenLocation[7313] | -16; 
	let screenLocation[7314] = screenLocation[7314] | -1; 
	let screenLocation[7345] = screenLocation[7345] | -16; 
	let screenLocation[7346] = screenLocation[7346] | -1; 
	let screenLocation[7377] = screenLocation[7377] | -16; 
	let screenLocation[7378] = screenLocation[7378] | 16383; 
	let screenLocation[7379] = screenLocation[7379] | 15; 
	let screenLocation[7409] = screenLocation[7409] | -16; 
	let screenLocation[7410] = screenLocation[7410] | 16383; 
	let screenLocation[7411] = screenLocation[7411] | 15; 
	let screenLocation[7441] = screenLocation[7441] | -64; 
	let screenLocation[7442] = screenLocation[7442] | 16383; 
	let screenLocation[7443] = screenLocation[7443] | 48; 
	let screenLocation[7473] = screenLocation[7473] | -64; 
	let screenLocation[7474] = screenLocation[7474] | 16383; 
	let screenLocation[7475] = screenLocation[7475] | 48; 
	let screenLocation[7505] = screenLocation[7505] | -4; 
	let screenLocation[7506] = screenLocation[7506] | 16383; 
	let screenLocation[7507] = screenLocation[7507] | 192; 
	let screenLocation[7537] = screenLocation[7537] | -4; 
	let screenLocation[7538] = screenLocation[7538] | 16383; 
	let screenLocation[7539] = screenLocation[7539] | 192; 
	let screenLocation[7569] = screenLocation[7569] | -49; 
	let screenLocation[7570] = screenLocation[7570] | 16383; 
	let screenLocation[7571] = screenLocation[7571] | 192; 
	let screenLocation[7601] = screenLocation[7601] | -49; 
	let screenLocation[7602] = screenLocation[7602] | 16383; 
	let screenLocation[7603] = screenLocation[7603] | 192; 
	let screenLocation[7633] = screenLocation[7633] | -973; 
	let screenLocation[7634] = screenLocation[7634] | 16383; 
	let screenLocation[7635] = screenLocation[7635] | 768; 
	let screenLocation[7665] = screenLocation[7665] | -973; 
	let screenLocation[7666] = screenLocation[7666] | 16383; 
	let screenLocation[7667] = screenLocation[7667] | 768; 
	let screenLocation[7697] = screenLocation[7697] | -4045; 
	let screenLocation[7698] = screenLocation[7698] | 16383; 
	let screenLocation[7699] = screenLocation[7699] | 3072; 
	let screenLocation[7729] = screenLocation[7729] | -4045; 
	let screenLocation[7730] = screenLocation[7730] | 16383; 
	let screenLocation[7731] = screenLocation[7731] | 3072; 
	let screenLocation[7761] = screenLocation[7761] | -16333; 
	let screenLocation[7762] = screenLocation[7762] | 4095; 
	let screenLocation[7763] = screenLocation[7763] | 3072; 
	let screenLocation[7793] = screenLocation[7793] | -16333; 
	let screenLocation[7794] = screenLocation[7794] | 4095; 
	let screenLocation[7795] = screenLocation[7795] | 3072; 
	let screenLocation[7825] = screenLocation[7825] | 12; 
	let screenLocation[7826] = screenLocation[7826] | 1023; 
	let screenLocation[7827] = screenLocation[7827] | 12288; 
	let screenLocation[7857] = screenLocation[7857] | 12; 
	let screenLocation[7858] = screenLocation[7858] | 1023; 
	let screenLocation[7859] = screenLocation[7859] | 12288; 
	let screenLocation[7889] = screenLocation[7889] | 12; 
	let screenLocation[7890] = screenLocation[7890] | 1020; 
	let screenLocation[7891] = screenLocation[7891] | 12288; 
	let screenLocation[7921] = screenLocation[7921] | 12; 
	let screenLocation[7922] = screenLocation[7922] | 1020; 
	let screenLocation[7923] = screenLocation[7923] | 12288; 
	let screenLocation[7953] = screenLocation[7953] | 48; 
	let screenLocation[7954] = screenLocation[7954] | 48; 
	let screenLocation[7955] = screenLocation[7955] | 12288; 
	let screenLocation[7985] = screenLocation[7985] | 48; 
	let screenLocation[7986] = screenLocation[7986] | 48; 
	let screenLocation[7987] = screenLocation[7987] | 12288; 
	let screenLocation[8017] = screenLocation[8017] | 192; 
	let screenLocation[8019] = screenLocation[8019] | 12288; 
	let screenLocation[8049] = screenLocation[8049] | 192; 
	let screenLocation[8051] = screenLocation[8051] | 12288; 
	let screenLocation[8081] = screenLocation[8081] | 768; 
	let screenLocation[8083] = screenLocation[8083] | 12288; 
	let screenLocation[8113] = screenLocation[8113] | 768; 
	let screenLocation[8115] = screenLocation[8115] | 12288; 
	let screenLocation[8145] = screenLocation[8145] | 3072; 
	let screenLocation[8147] = screenLocation[8147] | 12288; 
	let screenLocation[8177] = screenLocation[8177] | 3072; 
	let screenLocation[8179] = screenLocation[8179] | 12288; 
	return;
    }

    /** Draw pistol with smoke from firing */
    function void drawPistolFired() {
	let screenLocation[6160] = screenLocation[6160] | -64; 
	let screenLocation[6161] = screenLocation[6161] | 255; 
	let screenLocation[6192] = screenLocation[6192] | -64; 
	let screenLocation[6193] = screenLocation[6193] | 255; 
	let screenLocation[6224] = screenLocation[6224] | -784; 
	let screenLocation[6225] = screenLocation[6225] | 1023; 
	let screenLocation[6256] = screenLocation[6256] | -784; 
	let screenLocation[6257] = screenLocation[6257] | 1023; 
	let screenLocation[6288] = screenLocation[6288] | -16; 
	let screenLocation[6289] = screenLocation[6289] | 831; 
	let screenLocation[6320] = screenLocation[6320] | -16; 
	let screenLocation[6321] = screenLocation[6321] | 831; 
	let screenLocation[6352] = screenLocation[6352] | -16; 
	let screenLocation[6353] = screenLocation[6353] | 1023; 
	let screenLocation[6384] = screenLocation[6384] | -16; 
	let screenLocation[6385] = screenLocation[6385] | 1023; 
	let screenLocation[6416] = screenLocation[6416] | -208; 
	let screenLocation[6417] = screenLocation[6417] | 255; 
	let screenLocation[6448] = screenLocation[6448] | -208; 
	let screenLocation[6449] = screenLocation[6449] | 255; 
	let screenLocation[6480] = screenLocation[6480] | -16; 
	let screenLocation[6481] = screenLocation[6481] | 255; 
	let screenLocation[6512] = screenLocation[6512] | -16; 
	let screenLocation[6513] = screenLocation[6513] | 255; 
	let screenLocation[6544] = screenLocation[6544] | -64; 
	let screenLocation[6545] = screenLocation[6545] | 1023; 
	let screenLocation[6576] = screenLocation[6576] | -64; 
	let screenLocation[6577] = screenLocation[6577] | 1023; 
	let screenLocation[6608] = screenLocation[6608] | -4096; 
	let screenLocation[6609] = screenLocation[6609] | 4095; 
	let screenLocation[6640] = screenLocation[6640] | -4096; 
	let screenLocation[6641] = screenLocation[6641] | 4095; 
	let screenLocation[6672] = screenLocation[6672] | -16384; 
	let screenLocation[6673] = screenLocation[6673] | -1; 
	let screenLocation[6704] = screenLocation[6704] | -16384; 
	let screenLocation[6705] = screenLocation[6705] | -1; 
	let screenLocation[6737] = screenLocation[6737] | -1; 
	let screenLocation[6738] = screenLocation[6738] | 3; 
	let screenLocation[6769] = screenLocation[6769] | -1; 
	let screenLocation[6770] = screenLocation[6770] | 3; 
	let screenLocation[6801] = screenLocation[6801] | -1; 
	let screenLocation[6802] = screenLocation[6802] | 15; 
	let screenLocation[6833] = screenLocation[6833] | -1; 
	let screenLocation[6834] = screenLocation[6834] | 15; 
	let screenLocation[6865] = screenLocation[6865] | -1; 
	let screenLocation[6866] = screenLocation[6866] | 63; 
	let screenLocation[6897] = screenLocation[6897] | -1; 
	let screenLocation[6898] = screenLocation[6898] | 63; 
	let screenLocation[6929] = screenLocation[6929] | 16383; 
	let screenLocation[6930] = screenLocation[6930] | 780; 
	let screenLocation[6961] = screenLocation[6961] | 16383; 
	let screenLocation[6962] = screenLocation[6962] | 780; 
	let screenLocation[6993] = screenLocation[6993] | 16332; 
	let screenLocation[6994] = screenLocation[6994] | 768; 
	let screenLocation[7025] = screenLocation[7025] | 16332; 
	let screenLocation[7026] = screenLocation[7026] | 768; 
	let screenLocation[7057] = screenLocation[7057] | -196; 
	let screenLocation[7058] = screenLocation[7058] | 4095; 
	let screenLocation[7089] = screenLocation[7089] | -196; 
	let screenLocation[7090] = screenLocation[7090] | 4095; 
	let screenLocation[7121] = screenLocation[7121] | -784; 
	let screenLocation[7122] = screenLocation[7122] | 4095; 
	let screenLocation[7153] = screenLocation[7153] | -784; 
	let screenLocation[7154] = screenLocation[7154] | 4095; 
	let screenLocation[7185] = screenLocation[7185] | -16; 
	let screenLocation[7186] = screenLocation[7186] | 4095; 
	let screenLocation[7217] = screenLocation[7217] | -16; 
	let screenLocation[7218] = screenLocation[7218] | 4095; 
	let screenLocation[7249] = screenLocation[7249] | -16; 
	let screenLocation[7250] = screenLocation[7250] | 4095; 
	let screenLocation[7281] = screenLocation[7281] | -16; 
	let screenLocation[7282] = screenLocation[7282] | 4095; 
	let screenLocation[7313] = screenLocation[7313] | -16; 
	let screenLocation[7314] = screenLocation[7314] | -1; 
	let screenLocation[7345] = screenLocation[7345] | -16; 
	let screenLocation[7346] = screenLocation[7346] | -1; 
	let screenLocation[7377] = screenLocation[7377] | -16; 
	let screenLocation[7378] = screenLocation[7378] | 16383; 
	let screenLocation[7379] = screenLocation[7379] | 15; 
	let screenLocation[7409] = screenLocation[7409] | -16; 
	let screenLocation[7410] = screenLocation[7410] | 16383; 
	let screenLocation[7411] = screenLocation[7411] | 15; 
	let screenLocation[7441] = screenLocation[7441] | -64; 
	let screenLocation[7442] = screenLocation[7442] | 16383; 
	let screenLocation[7443] = screenLocation[7443] | 48; 
	let screenLocation[7473] = screenLocation[7473] | -64; 
	let screenLocation[7474] = screenLocation[7474] | 16383; 
	let screenLocation[7475] = screenLocation[7475] | 48; 
	let screenLocation[7505] = screenLocation[7505] | -4; 
	let screenLocation[7506] = screenLocation[7506] | 16383; 
	let screenLocation[7507] = screenLocation[7507] | 192; 
	let screenLocation[7537] = screenLocation[7537] | -4; 
	let screenLocation[7538] = screenLocation[7538] | 16383; 
	let screenLocation[7539] = screenLocation[7539] | 192; 
	let screenLocation[7569] = screenLocation[7569] | -49; 
	let screenLocation[7570] = screenLocation[7570] | 16383; 
	let screenLocation[7571] = screenLocation[7571] | 192; 
	let screenLocation[7601] = screenLocation[7601] | -49; 
	let screenLocation[7602] = screenLocation[7602] | 16383; 
	let screenLocation[7603] = screenLocation[7603] | 192; 
	let screenLocation[7633] = screenLocation[7633] | -973; 
	let screenLocation[7634] = screenLocation[7634] | 16383; 
	let screenLocation[7635] = screenLocation[7635] | 768; 
	let screenLocation[7665] = screenLocation[7665] | -973; 
	let screenLocation[7666] = screenLocation[7666] | 16383; 
	let screenLocation[7667] = screenLocation[7667] | 768; 
	let screenLocation[7697] = screenLocation[7697] | -4045; 
	let screenLocation[7698] = screenLocation[7698] | 16383; 
	let screenLocation[7699] = screenLocation[7699] | 3072; 
	let screenLocation[7729] = screenLocation[7729] | -4045; 
	let screenLocation[7730] = screenLocation[7730] | 16383; 
	let screenLocation[7731] = screenLocation[7731] | 3072; 
	let screenLocation[7761] = screenLocation[7761] | -16333; 
	let screenLocation[7762] = screenLocation[7762] | 4095; 
	let screenLocation[7763] = screenLocation[7763] | 3072; 
	let screenLocation[7793] = screenLocation[7793] | -16333; 
	let screenLocation[7794] = screenLocation[7794] | 4095; 
	let screenLocation[7795] = screenLocation[7795] | 3072; 
	let screenLocation[7825] = screenLocation[7825] | 12; 
	let screenLocation[7826] = screenLocation[7826] | 1023; 
	let screenLocation[7827] = screenLocation[7827] | 12288; 
	let screenLocation[7857] = screenLocation[7857] | 12; 
	let screenLocation[7858] = screenLocation[7858] | 1023; 
	let screenLocation[7859] = screenLocation[7859] | 12288; 
	let screenLocation[7889] = screenLocation[7889] | 12; 
	let screenLocation[7890] = screenLocation[7890] | 1020; 
	let screenLocation[7891] = screenLocation[7891] | 12288; 
	let screenLocation[7921] = screenLocation[7921] | 12; 
	let screenLocation[7922] = screenLocation[7922] | 1020; 
	let screenLocation[7923] = screenLocation[7923] | 12288; 
	let screenLocation[7953] = screenLocation[7953] | 48; 
	let screenLocation[7954] = screenLocation[7954] | 48; 
	let screenLocation[7955] = screenLocation[7955] | 12288; 
	let screenLocation[7985] = screenLocation[7985] | 48; 
	let screenLocation[7986] = screenLocation[7986] | 48; 
	let screenLocation[7987] = screenLocation[7987] | 12288; 
	let screenLocation[8017] = screenLocation[8017] | 192; 
	let screenLocation[8019] = screenLocation[8019] | 12288; 
	let screenLocation[8049] = screenLocation[8049] | 192; 
	let screenLocation[8051] = screenLocation[8051] | 12288; 
	let screenLocation[8081] = screenLocation[8081] | 768; 
	let screenLocation[8083] = screenLocation[8083] | 12288; 
	let screenLocation[8113] = screenLocation[8113] | 768; 
	let screenLocation[8115] = screenLocation[8115] | 12288; 
	let screenLocation[8145] = screenLocation[8145] | 3072; 
	let screenLocation[8147] = screenLocation[8147] | 12288; 
	let screenLocation[8177] = screenLocation[8177] | 3072; 
	let screenLocation[8179] = screenLocation[8179] | 12288;
	return;
    }
    
}
