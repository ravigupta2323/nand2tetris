// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in = load, sel = address[9..11], a = reg0, b= reg1, c=reg2, d=reg3, e=reg4, f= reg5, g=reg6, h=reg7);
    
    RAM512 (in = in, load = reg0, out =  out0, address = address[0..8]);
    RAM512 (in = in, load = reg1, out =  out1, address = address[0..8]);
    RAM512 (in = in, load = reg2, out =  out2, address = address[0..8]);
    RAM512 (in = in, load = reg3, out =  out3, address = address[0..8]);
    RAM512 (in = in, load = reg4, out =  out4, address = address[0..8]);
    RAM512 (in = in, load = reg5, out =  out5, address = address[0..8]);
    RAM512 (in = in, load = reg6, out =  out6, address = address[0..8]);
    RAM512 (in = in, load = reg7, out =  out7, address = address[0..8]);
    
    Mux8Way16 (a = out0, b= out1, c=out2, d=out3, e=out4, f= out5, g=out6, h=out7, sel = address[9..11], out = out);
}